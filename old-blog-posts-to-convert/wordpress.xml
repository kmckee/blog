<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.4.10" created="2017-05-28 20:18" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Kyle McKee</title>
	<link>http://aptobits.com</link>
	<description></description>
	<pubDate>Sun, 28 May 2017 20:18:54 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://aptobits.com</wp:base_site_url>
	<wp:base_blog_url>http://aptobits.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[kmckee]]></wp:author_login><wp:author_email><![CDATA[mckee.kyle@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[Kyle McKee]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>24</wp:term_id><wp:category_nicename><![CDATA[opinions]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Opinions]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename><![CDATA[projects]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Projects]]></wp:cat_name><wp:category_description><![CDATA[Projects that I've worked on.]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename><![CDATA[tutorials]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Tutorials]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug><![CDATA[agile]]></wp:tag_slug><wp:tag_name><![CDATA[Agile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug><![CDATA[amazon-ec2]]></wp:tag_slug><wp:tag_name><![CDATA[Amazon EC2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug><![CDATA[arduino]]></wp:tag_slug><wp:tag_name><![CDATA[arduino]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug><![CDATA[asp-net-mvc]]></wp:tag_slug><wp:tag_name><![CDATA[ASP.NET MVC]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug><![CDATA[atdd]]></wp:tag_slug><wp:tag_name><![CDATA[ATDD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug><![CDATA[c]]></wp:tag_slug><wp:tag_name><![CDATA[C#]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug><![CDATA[caremad]]></wp:tag_slug><wp:tag_name><![CDATA[caremad]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug><![CDATA[ci]]></wp:tag_slug><wp:tag_name><![CDATA[CI]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug><![CDATA[comments]]></wp:tag_slug><wp:tag_name><![CDATA[comments]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug><![CDATA[cordova]]></wp:tag_slug><wp:tag_name><![CDATA[Cordova]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug><![CDATA[ec2]]></wp:tag_slug><wp:tag_name><![CDATA[EC2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug><![CDATA[entity-framework]]></wp:tag_slug><wp:tag_name><![CDATA[Entity Framework]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug><![CDATA[estimates]]></wp:tag_slug><wp:tag_name><![CDATA[estimates]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug><![CDATA[feedback]]></wp:tag_slug><wp:tag_name><![CDATA[feedback]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug><![CDATA[firebug]]></wp:tag_slug><wp:tag_name><![CDATA[Firebug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug><![CDATA[ionic]]></wp:tag_slug><wp:tag_name><![CDATA[Ionic]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug><![CDATA[javascript]]></wp:tag_slug><wp:tag_name><![CDATA[Javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug><![CDATA[jenkins]]></wp:tag_slug><wp:tag_name><![CDATA[Jenkins]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug><![CDATA[knockoutjs]]></wp:tag_slug><wp:tag_name><![CDATA[KnockoutJS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug><![CDATA[linux]]></wp:tag_slug><wp:tag_name><![CDATA[Linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug><![CDATA[microcontroller]]></wp:tag_slug><wp:tag_name><![CDATA[Microcontroller]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug><![CDATA[mobile]]></wp:tag_slug><wp:tag_name><![CDATA[Mobile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug><![CDATA[naming]]></wp:tag_slug><wp:tag_name><![CDATA[naming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug><![CDATA[process]]></wp:tag_slug><wp:tag_name><![CDATA[process]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug><![CDATA[ruby]]></wp:tag_slug><wp:tag_name><![CDATA[ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug><![CDATA[specflow]]></wp:tag_slug><wp:tag_name><![CDATA[SpecFlow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug><![CDATA[teensy]]></wp:tag_slug><wp:tag_name><![CDATA[Teensy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug><![CDATA[toy-hacking]]></wp:tag_slug><wp:tag_name><![CDATA[toy hacking]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug><![CDATA[watin]]></wp:tag_slug><wp:tag_name><![CDATA[Watin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug><![CDATA[windows-phone]]></wp:tag_slug><wp:tag_name><![CDATA[Windows Phone]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>38</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[main]]></wp:term_slug><wp:term_name><![CDATA[main]]></wp:term_name></wp:term>

	<generator>https://wordpress.org/?v=4.4.10</generator>

	<item>
		<title>food-details-device</title>
		<link>http://aptobits.com/2011/10/babys-first-foods/food-details-device/</link>
		<pubDate>Tue, 21 Aug 2012 01:59:41 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/food-details-device.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date><![CDATA[2012-08-21 01:59:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-21 01:59:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[food-details-device]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>9</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/food-details-device.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/food-details-device.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"381";s:6:"height";s:3:"711";s:14:"hwstring_small";s:22:"height='96' width='51'";s:4:"file";s:31:"2012/08/food-details-device.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"food-details-device-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:31:"food-details-device-160x300.png";s:5:"width";s:3:"160";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:31:"food-details-device-381x288.png";s:5:"width";s:3:"381";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:31:"food-details-device-381x288.png";s:5:"width";s:3:"381";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:31:"food-details-device-160x300.png";s:5:"width";s:3:"160";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ingredients-device</title>
		<link>http://aptobits.com/2011/10/babys-first-foods/ingredients-device/</link>
		<pubDate>Tue, 21 Aug 2012 01:59:43 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/ingredients-device.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date><![CDATA[2012-08-21 01:59:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-21 01:59:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ingredients-device]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>9</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/ingredients-device.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/ingredients-device.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"383";s:6:"height";s:3:"713";s:14:"hwstring_small";s:22:"height='96' width='51'";s:4:"file";s:30:"2012/08/ingredients-device.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"ingredients-device-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:30:"ingredients-device-161x300.png";s:5:"width";s:3:"161";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:30:"ingredients-device-383x288.png";s:5:"width";s:3:"383";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:30:"ingredients-device-383x288.png";s:5:"width";s:3:"383";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:30:"ingredients-device-161x300.png";s:5:"width";s:3:"161";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>search-device</title>
		<link>http://aptobits.com/2011/10/babys-first-foods/search-device/</link>
		<pubDate>Tue, 21 Aug 2012 01:59:45 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/search-device.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date><![CDATA[2012-08-21 01:59:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-21 01:59:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[search-device]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>9</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/search-device.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/search-device.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"383";s:6:"height";s:3:"713";s:14:"hwstring_small";s:22:"height='96' width='51'";s:4:"file";s:25:"2012/08/search-device.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"search-device-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"search-device-161x300.png";s:5:"width";s:3:"161";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:25:"search-device-383x288.png";s:5:"width";s:3:"383";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:25:"search-device-383x288.png";s:5:"width";s:3:"383";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:25:"search-device-161x300.png";s:5:"width";s:3:"161";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>settings-device</title>
		<link>http://aptobits.com/2011/10/babys-first-foods/settings-device/</link>
		<pubDate>Tue, 21 Aug 2012 01:59:46 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/settings-device.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date><![CDATA[2012-08-21 01:59:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-21 01:59:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[settings-device]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>9</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/settings-device.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/settings-device.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"383";s:6:"height";s:3:"713";s:14:"hwstring_small";s:22:"height='96' width='51'";s:4:"file";s:27:"2012/08/settings-device.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"settings-device-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:27:"settings-device-161x300.png";s:5:"width";s:3:"161";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:27:"settings-device-383x288.png";s:5:"width";s:3:"383";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:27:"settings-device-383x288.png";s:5:"width";s:3:"383";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:27:"settings-device-161x300.png";s:5:"width";s:3:"161";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FireFrame In Action</title>
		<link>http://aptobits.com/2012/08/fireframe-extending-firebug/fireframe/</link>
		<pubDate>Wed, 22 Aug 2012 01:33:30 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/FireFrame.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date><![CDATA[2012-08-22 01:33:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-22 01:33:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fireframe]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>45</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/FireFrame.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/FireFrame.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"700";s:6:"height";s:3:"500";s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:21:"2012/08/FireFrame.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"FireFrame-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"FireFrame-300x214.png";s:5:"width";s:3:"300";s:6:"height";s:3:"214";}s:14:"post-thumbnail";a:3:{s:4:"file";s:21:"FireFrame-700x288.png";s:5:"width";s:3:"700";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:21:"FireFrame-700x288.png";s:5:"width";s:3:"700";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:21:"FireFrame-420x300.png";s:5:"width";s:3:"420";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Screenshot]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EC2 Management Console</title>
		<link>http://aptobits.com/2012/09/setting-up-jenkins-ci-on-an-amazon-ec2-linux-instance/ec2-management-console/</link>
		<pubDate>Fri, 24 Aug 2012 03:02:57 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/EC2-Management-Console.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date><![CDATA[2012-08-24 03:02:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-24 03:02:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ec2-management-console]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>75</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/EC2-Management-Console.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/EC2-Management-Console.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"872";s:6:"height";s:3:"593";s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:34:"2012/08/EC2-Management-Console.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"EC2-Management-Console-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:34:"EC2-Management-Console-300x204.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"204";}s:14:"post-thumbnail";a:3:{s:4:"file";s:34:"EC2-Management-Console-872x288.jpg";s:5:"width";s:3:"872";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:34:"EC2-Management-Console-872x288.jpg";s:5:"width";s:3:"872";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:34:"EC2-Management-Console-441x300.jpg";s:5:"width";s:3:"441";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Security Group Configuration</title>
		<link>http://aptobits.com/2012/09/setting-up-jenkins-ci-on-an-amazon-ec2-linux-instance/ec2-management-console-1/</link>
		<pubDate>Fri, 24 Aug 2012 03:12:14 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/EC2-Management-Console-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date><![CDATA[2012-08-24 03:12:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-24 03:12:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ec2-management-console-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>75</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/EC2-Management-Console-1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/EC2-Management-Console-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"871";s:6:"height";s:3:"593";s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:36:"2012/08/EC2-Management-Console-1.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"EC2-Management-Console-1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"EC2-Management-Console-1-300x204.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"204";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"EC2-Management-Console-1-871x288.jpg";s:5:"width";s:3:"871";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"EC2-Management-Console-1-871x288.jpg";s:5:"width";s:3:"871";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"EC2-Management-Console-1-440x300.jpg";s:5:"width";s:3:"440";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Configure System [Jenkins]</title>
		<link>http://aptobits.com/2012/09/setting-up-jenkins-ci-on-an-amazon-ec2-linux-instance/configure-system-jenkins/</link>
		<pubDate>Sat, 25 Aug 2012 00:36:52 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/Configure-System-Jenkins.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date><![CDATA[2012-08-25 00:36:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-25 00:36:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[configure-system-jenkins]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>75</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/Configure-System-Jenkins.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/Configure-System-Jenkins.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"701";s:6:"height";s:3:"407";s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:36:"2012/08/Configure-System-Jenkins.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"Configure-System-Jenkins-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"Configure-System-Jenkins-300x174.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"174";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"Configure-System-Jenkins-701x288.jpg";s:5:"width";s:3:"701";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"Configure-System-Jenkins-701x288.jpg";s:5:"width";s:3:"701";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"Configure-System-Jenkins-500x290.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"290";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Configure System [Jenkins]-1</title>
		<link>http://aptobits.com/2012/09/setting-up-jenkins-ci-on-an-amazon-ec2-linux-instance/configure-system-jenkins-1/</link>
		<pubDate>Sat, 25 Aug 2012 00:43:38 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/08/Configure-System-Jenkins-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date><![CDATA[2012-08-25 00:43:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-25 00:43:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[configure-system-jenkins-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>75</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/08/Configure-System-Jenkins-1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/Configure-System-Jenkins-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"799";s:6:"height";s:3:"427";s:14:"hwstring_small";s:23:"height='68' width='128'";s:4:"file";s:38:"2012/08/Configure-System-Jenkins-1.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:38:"Configure-System-Jenkins-1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:38:"Configure-System-Jenkins-1-300x160.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"160";}s:14:"post-thumbnail";a:3:{s:4:"file";s:38:"Configure-System-Jenkins-1-799x288.jpg";s:5:"width";s:3:"799";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:38:"Configure-System-Jenkins-1-799x288.jpg";s:5:"width";s:3:"799";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:38:"Configure-System-Jenkins-1-500x267.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"267";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>String Calculator Kata Specs</title>
		<link>http://aptobits.com/2012/10/comments-are-not-the-goal/stringkata_output/</link>
		<pubDate>Sun, 02 Sep 2012 18:04:20 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://test.aptobits.com/wp-content/uploads/2012/09/stringkata_output.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date><![CDATA[2012-09-02 14:04:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-09-02 18:04:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stringkata_output]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>133</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2012/09/stringkata_output.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/stringkata_output.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"586";s:6:"height";s:3:"415";s:14:"hwstring_small";s:23:"height='90' width='128'";s:4:"file";s:29:"2012/09/stringkata_output.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"stringkata_output-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:29:"stringkata_output-300x212.png";s:5:"width";s:3:"300";s:6:"height";s:3:"212";}s:14:"post-thumbnail";a:3:{s:4:"file";s:29:"stringkata_output-586x288.png";s:5:"width";s:3:"586";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:29:"stringkata_output-586x288.png";s:5:"width";s:3:"586";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:29:"stringkata_output-423x300.png";s:5:"width";s:3:"423";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Build Light</title>
		<link>http://aptobits.com/2013/01/traffic-light-build-indicator/imgp2632/</link>
		<pubDate>Sun, 06 Jan 2013 21:13:07 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2013/01/IMGP2632.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date><![CDATA[2013-01-06 16:13:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-06 21:13:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[imgp2632]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>216</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2013/01/IMGP2632.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/01/IMGP2632.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Traffic Light]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Teensy in the Build Light</title>
		<link>http://aptobits.com/2013/01/traffic-light-build-indicator/teensy/</link>
		<pubDate>Sun, 06 Jan 2013 23:21:09 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2013/01/Teensy.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>238</wp:post_id>
		<wp:post_date><![CDATA[2013-01-06 18:21:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-06 23:21:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[teensy]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>216</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2013/01/Teensy.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/01/Teensy.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Build Light Guts</title>
		<link>http://aptobits.com/2013/01/traffic-light-build-indicator/light-guts/</link>
		<pubDate>Sun, 06 Jan 2013 23:21:18 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2013/01/light-guts.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date><![CDATA[2013-01-06 18:21:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-06 23:21:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[light-guts]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>216</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2013/01/light-guts.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/01/light-guts.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Build Light Relay</title>
		<link>http://aptobits.com/2013/01/traffic-light-build-indicator/relay/</link>
		<pubDate>Sun, 06 Jan 2013 23:21:24 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2013/01/Relay.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date><![CDATA[2013-01-06 18:21:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-06 23:21:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[relay]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>216</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2013/01/Relay.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/01/Relay.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SpiderBotSchematic</title>
		<link>http://aptobits.com/2014/01/hacking-a-hexbug-robot/spiderbotschematic/</link>
		<pubDate>Sat, 11 Jan 2014 02:58:06 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2014/01/SpiderBotSchematic.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date><![CDATA[2014-01-10 21:58:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-01-11 02:58:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[spiderbotschematic]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>275</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2014/01/SpiderBotSchematic.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/01/SpiderBotSchematic.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2823;s:6:"height";i:1860;s:4:"file";s:30:"2014/01/SpiderBotSchematic.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"SpiderBotSchematic-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"SpiderBotSchematic-300x197.png";s:5:"width";i:300;s:6:"height";i:197;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:31:"SpiderBotSchematic-1024x674.png";s:5:"width";i:1024;s:6:"height";i:674;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Me and Wolverine</title>
		<link>http://aptobits.com/hire-me/wolverine_and_i/</link>
		<pubDate>Mon, 18 Aug 2014 15:45:38 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2014/08/wolverine_and_i.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>312</wp:post_id>
		<wp:post_date><![CDATA[2014-08-18 11:45:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-08-18 15:45:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wolverine_and_i]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>5</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2014/08/wolverine_and_i.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/08/wolverine_and_i.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:540;s:6:"height";i:960;s:4:"file";s:27:"2014/08/wolverine_and_i.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"wolverine_and_i-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"wolverine_and_i-168x300.jpg";s:5:"width";i:168;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Types_of_Testing_traditional</title>
		<link>http://aptobits.com/2015/10/feedback-loops/types_of_testing_traditional/</link>
		<pubDate>Tue, 21 Apr 2015 00:02:30 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/04/Types_of_Testing_traditional.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>334</wp:post_id>
		<wp:post_date><![CDATA[2015-04-20 20:02:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-21 00:02:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[types_of_testing_traditional]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>332</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/04/Types_of_Testing_traditional.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/04/Types_of_Testing_traditional.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1988;s:6:"height";i:1022;s:4:"file";s:40:"2015/04/Types_of_Testing_traditional.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:40:"Types_of_Testing_traditional-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:40:"Types_of_Testing_traditional-300x154.png";s:5:"width";i:300;s:6:"height";i:154;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:41:"Types_of_Testing_traditional-1024x526.png";s:5:"width";i:1024;s:6:"height";i:526;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Types_of_Testing_rich_feedback</title>
		<link>http://aptobits.com/2015/10/feedback-loops/types_of_testing_rich_feedback/</link>
		<pubDate>Tue, 21 Apr 2015 00:08:40 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/04/Types_of_Testing_rich_feedback.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>335</wp:post_id>
		<wp:post_date><![CDATA[2015-04-20 20:08:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-21 00:08:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[types_of_testing_rich_feedback]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>332</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/04/Types_of_Testing_rich_feedback.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/04/Types_of_Testing_rich_feedback.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1984;s:6:"height";i:984;s:4:"file";s:42:"2015/04/Types_of_Testing_rich_feedback.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:42:"Types_of_Testing_rich_feedback-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:42:"Types_of_Testing_rich_feedback-300x149.png";s:5:"width";i:300;s:6:"height";i:149;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:43:"Types_of_Testing_rich_feedback-1024x508.png";s:5:"width";i:1024;s:6:"height";i:508;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>module_counts</title>
		<link>http://aptobits.com/2015/10/getting-started-with-cordova/module_counts/</link>
		<pubDate>Sat, 03 Oct 2015 14:51:59 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/module_counts.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>350</wp:post_id>
		<wp:post_date><![CDATA[2015-10-03 10:51:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-03 14:51:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[module_counts]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>348</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/module_counts.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/module_counts.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:796;s:6:"height";i:422;s:4:"file";s:25:"2015/10/module_counts.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"module_counts-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"module_counts-300x159.png";s:5:"width";i:300;s:6:"height";i:159;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vanilla_cordova_tree</title>
		<link>http://aptobits.com/2015/10/getting-started-with-cordova/vanilla_cordova_tree/</link>
		<pubDate>Sat, 03 Oct 2015 19:31:41 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/vanilla_cordova_tree.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date><![CDATA[2015-10-03 15:31:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-03 19:31:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vanilla_cordova_tree]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>348</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/vanilla_cordova_tree.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/vanilla_cordova_tree.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:299;s:6:"height";i:291;s:4:"file";s:32:"2015/10/vanilla_cordova_tree.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"vanilla_cordova_tree-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hire Me</title>
		<link>http://aptobits.com/hire-me/</link>
		<pubDate>Mon, 20 Aug 2012 02:14:26 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[[si-contact-form form='1']]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date><![CDATA[2012-08-20 02:14:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-20 02:14:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hire-me]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[hire me]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Hire Me - Kyle McKee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[38]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Baby&#039;s First Foods</title>
		<link>http://aptobits.com/2011/10/babys-first-foods/</link>
		<pubDate>Tue, 25 Oct 2011 02:01:03 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[I've been playing around with Windows Phone development quite a bit lately.  I'm currently getting ready to submit my first application to the marketplace - "Baby's First Foods".

Babies under 1 year old can only eat certain foods depending on their age.  Each month new foods become available to the child.  It's hard to keep track of what foods your child is ready for and what foods should be avoided. That's the problem my app is trying to address.
<!--more-->
Key features:
<ul>
	<li>Filtered List of foods your baby is ready to eat right now.</li>
	<li>Complete list of all foods, including the suggested baby age.</li>
	<li>Search functionality</li>
	<li>Preparation instructions</li>
</ul>
I think that these features represent the <a title="Minimum Viable Product" href="http://en.wikipedia.org/wiki/Minimum_viable_product" target="_blank">Minimum Viable Product</a>.  My plan is to base any further development on feedback I receive from users. I'm trying to break my usual habit of going feature crazy and never releasing anything.

Of course, I do have some ideas for additional features...
<ul>
	<li>Push notifications when your baby has become eligible to eat additional foods.</li>
	<li>Recipe ideas for mixing different foods together.</li>
	<li>Ability for the user to edit the food/recipe data.</li>
	<li>Like &amp; dislike buttons on foods.</li>
	<li>Suggest foods based on likes &amp; dislikes.</li>
</ul>
I think my first priority after release will be making the feedback mechanism as easy as possible, in hopes that I'll get more of it.

This was my first time using MVVM.  I found it difficult to do 'pure' MVVM on Windows Phone.  Initially that was due to a lack of Commands, but after the Mango update I found that most of my "Commands" were just page navigation.  I'd just assume have that in the code-behind.

Unit testing WP7 assemblies is painful...  Very painful.  The silverlight assemblies can only be executed on the device, so in order to run your unit tests you need to deploy the test application to the device/emulator and then run the tests on there.  The <a title="Silverlight Unit Test Framework" href="http://archive.msdn.microsoft.com/silverlightut" target="_blank">Silverlight Unit Test Framework</a> has a built in 5 second countdown before it runs the tests.  All in all it takes around 20 seconds before my tests even begin to execute.  This increased cost makes me run my tests less frequently, which means I'm taking bigger steps, which means lower quality testing.

<a href="http://test.aptobits.com/wp-content/uploads/2012/08/food-details-device.png"><img class="wp-image-12 alignnone" title="food-details-device" src="http://test.aptobits.com/wp-content/uploads/2012/08/food-details-device.png" alt="" width="175" /></a><a href="http://test.aptobits.com/wp-content/uploads/2012/08/ingredients-device.png"><img class="alignnone wp-image-13" title="ingredients-device" src="http://test.aptobits.com/wp-content/uploads/2012/08/ingredients-device.png" alt="" width="175" /></a><a href="http://test.aptobits.com/wp-content/uploads/2012/08/search-device.png"><img class="alignnone wp-image-14" title="search-device" src="http://test.aptobits.com/wp-content/uploads/2012/08/search-device.png" alt="" width="175" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date><![CDATA[2011-10-25 02:01:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-25 02:01:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[babys-first-foods]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="windows-phone"><![CDATA[Windows Phone]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_overridden]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[Windows Phone, Kyle McKee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Baby's First Foods is a Windows Phone 7 application that helps users discover new foods for their infants.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Baby's First Foods]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FireIFrame - Extending Firebug to Simplify Working with Frames</title>
		<link>http://aptobits.com/2012/08/fireframe-extending-firebug/</link>
		<pubDate>Wed, 22 Aug 2012 01:48:57 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>The Trouble with IFrames and Firebug</h1>
I'm a huge fan of Firebug.  I tend to write most of my UI-centric Javascript right in the Firebug console so that I can run it and immediately see the results.  After I'm satisfied with the code I've written I'll cut it out of Firebug's console and paste it into its permanent home.  This probably isn't the most efficient workflow, but it works well for me because it provides really fast feedback.<!--more-->

If you use the Firebug console a lot, like me, you've probably run into issues when you're interacting with pages that use IFrames.  The console attaches to the top window, so any code you run via the command line is run only in that context.  You could manually drill down through any frames on the page like this:
<pre lang="javascript">var someElement = document.getElementById('someFrame').document.getElementById('someElement');</pre>
That's pretty ugly, and if you're planning to actually use the code you're writing in the console you'll need to run through it all and remove all the code that drills down through the frames.  I'll pass.
<h1>Attaching to Frames with cd(window)</h1>
Firebug has a built in command that can attach the console to a different window:
<pre lang="javascript">cd(document.getElementById("someFrame").contentWindow);
// Now, all script will be run in the context of that frame.
var someElement = document.getElementById('someElement');
cd(top);  // Attach the console back to the top window.</pre>
That's a lot better than manually drilling down through any frames, plus my code isn't going to be littered with useless frame references this way. Of course there are still a couple other problems:
<ul>
	<li>You have to type that big cd(...) line every time you want to switch contexts.</li>
	<li>You need to remember the name or index of the frame you want to attach to.</li>
	<li>If you have multiple levels of nested frames (...don't ask) it can be tedious and time consuming to drill down through them.</li>
</ul>
<h1>Enter FireIFrame</h1>
The solution I came up with was to extend Firebug by adding a button that would allow the user to visually select a frame on the page to attach the console to.  Here's what it looks like in action:

<a href="http://test.aptobits.com/wp-content/uploads/2012/08/FireFrame.png"><img class="aligncenter size-full wp-image-58" title="FireFrame In Action" src="http://test.aptobits.com/wp-content/uploads/2012/08/FireFrame.png" alt="Screenshot" width="700" height="500" /></a>

If you'd like to try it out can <a title="FireIFrame Download Page" href="https://addons.mozilla.org/en-US/firefox/addon/fireiframe/" target="_blank">download it directly</a> or just search for it in the extension manager.  Source code is available on <a title="FireIFrame GitHub page" href="https://github.com/kmckee/FireIFrame" target="_blank">GitHub</a>.

I think I could extend this further to also include a "Frames" tab that displays a graphic representation of all the frames on a page, indicates which one the console is currently attached to, and allows inspector style navigation to each frame in the HTML panel.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date><![CDATA[2012-08-22 01:48:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-22 01:48:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fireframe-extending-firebug]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="firebug"><![CDATA[Firebug]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_overridden]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:13:"enable-ribbon";s:4:"Show";s:10:"github-url";s:36:"https://github.com/kmckee/FireIFrame";s:11:"ribbon-type";i:1;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About Me</title>
		<link>http://aptobits.com/?page_id=115</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?page_id=115</guid>
		<description></description>
		<content:encoded><![CDATA[My name is Kyle McKee. I'm a developer living in Cleveland, Ohio.  I started writing code as a hobby and eventually I made a career out of it.  I love what I do.

I pay the bills by working in C# and JavaScript (mostly on web stuff), but I also write a lot of code in my free time using whatever languages and technologies I can get my hands on.  I'm constantly looking for something new to learn.
<h1>The top things I value in code are:</h1>
<ul>
	<li>Readability</li>
	<li>Testability</li>
	<li>Simplicity</li>
</ul>
<h1>My biggest professional influences are:</h1>
<ul>
	<li>Robert Martin</li>
	<li>Kent Beck</li>
	<li>Steve Freeman &amp; Nat Pryce</li>
</ul>
<h1>What else?</h1>
I'm also a father, dog owner, husband, and Bob Vila wanna-be.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date><![CDATA[2012-09-20 20:20:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_overridden]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[About Kyle McKee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[Kyle McKee, Developer, Cleveland]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My Availability</title>
		<link>http://aptobits.com/?page_id=267</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?page_id=267</guid>
		<description></description>
		<content:encoded><![CDATA[[availability display="dropdown"] 
[availability] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date><![CDATA[2013-09-19 21:51:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reading List</title>
		<link>http://aptobits.com/?page_id=290</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?page_id=290</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date><![CDATA[2014-08-02 13:37:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Books</title>
		<link>http://aptobits.com/?page_id=292</link>
		<pubDate>Sat, 02 Aug 2014 18:31:13 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?page_id=292</guid>
		<description></description>
		<content:encoded><![CDATA[[google_bookshelves title="Currently Reading" shelf="3" max = "1" layout = "description"]
[google_bookshelves title="Recommended Books" shelf="4" max = "60" layout = "grid" random="true"]
<br/>
[google_bookshelves title="My Reading List" shelf="2" max = "60" layout = "grid" random="true"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date><![CDATA[2014-08-02 14:31:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-08-02 18:31:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[books]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vanilla_cordova</title>
		<link>http://aptobits.com/2015/10/getting-started-with-cordova/vanilla_cordova/</link>
		<pubDate>Sun, 04 Oct 2015 01:30:46 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/vanilla_cordova.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>364</wp:post_id>
		<wp:post_date><![CDATA[2015-10-03 21:30:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-04 01:30:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vanilla_cordova]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>348</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/vanilla_cordova.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/vanilla_cordova.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:374;s:6:"height";i:688;s:4:"file";s:27:"2015/10/vanilla_cordova.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"vanilla_cordova-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:27:"vanilla_cordova-163x300.png";s:5:"width";i:163;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vanilla_ionic_tree</title>
		<link>http://aptobits.com/2015/10/intro-to-ionic/vanilla_ionic_tree/</link>
		<pubDate>Sun, 04 Oct 2015 16:40:10 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/vanilla_ionic_tree.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>373</wp:post_id>
		<wp:post_date><![CDATA[2015-10-04 12:40:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-04 16:40:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[vanilla_ionic_tree]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>361</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/vanilla_ionic_tree.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/vanilla_ionic_tree.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:608;s:6:"height";i:1148;s:4:"file";s:30:"2015/10/vanilla_ionic_tree.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"vanilla_ionic_tree-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"vanilla_ionic_tree-159x300.png";s:5:"width";i:159;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:31:"vanilla_ionic_tree-542x1024.png";s:5:"width";i:542;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vanilla_ionic_app</title>
		<link>http://aptobits.com/2015/10/intro-to-ionic/vanilla_ionic_app/</link>
		<pubDate>Sun, 04 Oct 2015 16:40:48 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/vanilla_ionic_app.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>374</wp:post_id>
		<wp:post_date><![CDATA[2015-10-04 12:40:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-04 16:40:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[vanilla_ionic_app]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>361</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/vanilla_ionic_app.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/vanilla_ionic_app.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:750;s:6:"height";i:1334;s:4:"file";s:29:"2015/10/vanilla_ionic_app.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"vanilla_ionic_app-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:29:"vanilla_ionic_app-169x300.png";s:5:"width";i:169;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:30:"vanilla_ionic_app-576x1024.png";s:5:"width";i:576;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Grid_Evenly_Spaced_Columns</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic/grid_evenly_spaced_columns/</link>
		<pubDate>Sat, 10 Oct 2015 20:22:36 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/Grid_Evenly_Spaced_Columns.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date><![CDATA[2015-10-10 16:22:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-10 20:22:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[grid_evenly_spaced_columns]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>392</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/Grid_Evenly_Spaced_Columns.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/Grid_Evenly_Spaced_Columns.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:730;s:6:"height";i:530;s:4:"file";s:38:"2015/10/Grid_Evenly_Spaced_Columns.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"Grid_Evenly_Spaced_Columns-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:38:"Grid_Evenly_Spaced_Columns-300x218.png";s:5:"width";i:300;s:6:"height";i:218;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ionic_blank_starter</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic/ionic_blank_starter/</link>
		<pubDate>Sun, 11 Oct 2015 00:04:47 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/ionic_blank_starter.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date><![CDATA[2015-10-10 20:04:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 00:04:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ionic_blank_starter]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>392</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/ionic_blank_starter.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/ionic_blank_starter.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:750;s:6:"height";i:1334;s:4:"file";s:31:"2015/10/ionic_blank_starter.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"ionic_blank_starter-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:31:"ionic_blank_starter-169x300.png";s:5:"width";i:169;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:32:"ionic_blank_starter-576x1024.png";s:5:"width";i:576;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ionic_blank_starter_in_browser</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic/ionic_blank_starter_in_browser/</link>
		<pubDate>Sun, 11 Oct 2015 00:14:02 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/ionic_blank_starter_in_browser.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>406</wp:post_id>
		<wp:post_date><![CDATA[2015-10-10 20:14:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 00:14:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ionic_blank_starter_in_browser]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>392</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/ionic_blank_starter_in_browser.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/ionic_blank_starter_in_browser.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:773;s:4:"file";s:42:"2015/10/ionic_blank_starter_in_browser.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:42:"ionic_blank_starter_in_browser-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:42:"ionic_blank_starter_in_browser-300x181.png";s:5:"width";i:300;s:6:"height";i:181;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:43:"ionic_blank_starter_in_browser-1024x618.png";s:5:"width";i:1024;s:6:"height";i:618;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>basic_grid_layout</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic/basic_grid_layout/</link>
		<pubDate>Sun, 11 Oct 2015 01:18:18 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/basic_grid_layout.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>409</wp:post_id>
		<wp:post_date><![CDATA[2015-10-10 21:18:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 01:18:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[basic_grid_layout]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>392</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/basic_grid_layout.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/basic_grid_layout.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:750;s:6:"height";i:1334;s:4:"file";s:29:"2015/10/basic_grid_layout.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"basic_grid_layout-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:29:"basic_grid_layout-169x300.png";s:5:"width";i:169;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:30:"basic_grid_layout-576x1024.png";s:5:"width";i:576;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vertically_centered_grid</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic/vertically_centered_grid/</link>
		<pubDate>Sun, 11 Oct 2015 01:47:17 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/vertically_centered_grid.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date><![CDATA[2015-10-10 21:47:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 01:47:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[vertically_centered_grid]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>392</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/vertically_centered_grid.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/vertically_centered_grid.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:750;s:6:"height";i:1334;s:4:"file";s:36:"2015/10/vertically_centered_grid.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"vertically_centered_grid-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:36:"vertically_centered_grid-169x300.png";s:5:"width";i:169;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:37:"vertically_centered_grid-576x1024.png";s:5:"width";i:576;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>simulator_with_buttons</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic/simulator_with_buttons/</link>
		<pubDate>Sun, 11 Oct 2015 20:20:21 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/simulator_with_buttons.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date><![CDATA[2015-10-11 16:20:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 20:20:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[simulator_with_buttons]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>392</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/simulator_with_buttons.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/simulator_with_buttons.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:750;s:6:"height";i:1334;s:4:"file";s:34:"2015/10/simulator_with_buttons.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"simulator_with_buttons-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:34:"simulator_with_buttons-169x300.png";s:5:"width";i:169;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:35:"simulator_with_buttons-576x1024.png";s:5:"width";i:576;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>its_doing_stuff</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic-part-2/its_doing_stuff/</link>
		<pubDate>Tue, 20 Oct 2015 13:26:50 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/its_doing_stuff.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date><![CDATA[2015-10-20 09:26:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-20 13:26:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[its_doing_stuff]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>413</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/its_doing_stuff.gif]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/its_doing_stuff.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:394;s:6:"height";i:606;s:4:"file";s:27:"2015/10/its_doing_stuff.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"its_doing_stuff-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:6:"medium";a:4:{s:4:"file";s:27:"its_doing_stuff-195x300.gif";s:5:"width";i:195;s:6:"height";i:300;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>plugin_search_vibrate</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic-part-2/plugin_search_vibrate/</link>
		<pubDate>Tue, 20 Oct 2015 14:52:52 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/wp-content/uploads/2015/10/plugin_search_vibrate.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>440</wp:post_id>
		<wp:post_date><![CDATA[2015-10-20 10:52:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-20 14:52:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[plugin_search_vibrate]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>413</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://aptobits.com/wp-content/uploads/2015/10/plugin_search_vibrate.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/10/plugin_search_vibrate.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1496;s:6:"height";i:368;s:4:"file";s:33:"2015/10/plugin_search_vibrate.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"plugin_search_vibrate-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:32:"plugin_search_vibrate-300x74.png";s:5:"width";i:300;s:6:"height";i:74;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:34:"plugin_search_vibrate-1024x252.png";s:5:"width";i:1024;s:6:"height";i:252;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lets Build a Hybrid Mobile App!</title>
		<link>http://aptobits.com/hybrid-dl/</link>
		<pubDate>Fri, 01 Jan 2016 22:13:08 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?page_id=455</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Pre-Requisites</h3>
<a href="http://prereqs.codemash.org/">Codemash Hosted Files</a>

<h3>Links</h3>
<ul>
	<li><a href="https://github.com/kmckee/cordova_ionic_class/">Completed Code on GitHub</a></li>
	<li><a href="http://aptobits.com/2015/10/build-a-calculator-with-ionic/">Blog Posts</a> that match today's exercises</li>
<li><a href="http://ionicframework.com/docs/">Ionic Documentation</a></li>
<li><a href="http://ionicframework.com/docs/components/#grid">Ionic Grid Documentation</a></li>
<li><a href="http://bower.io/">Bower</a></li>
<li><a href="https://github.com/kdinev/EpsilonJS">EpsilonJS Documentation</a> on GitHub</li>
<li><a href="https://cordova.apache.org/plugins">Cordova Plugin Search</a></li>
<li><a href="https://github.com/apache/cordova-plugin-vibration">Cordova Plugin Vibrate Documentation</a></li>
<li><a href="http://pouchdb.com/api.html">PouchDB Documentation</a></li>
<li><a href="https://github.com/angular-pouchdb/angular-pouchdb">Docs for angular-pouchdb</a></li>
<li><a href="https://chrome.google.com/webstore/detail/pouchdb-inspector/hbhhpaojmpfimakffndmpmpndcmonkfa">PouchDB Inspector Chrome Extension</a></li>
<li><a href="https://lodash.com/docs">lodash Documentation</a></li>
<li>Want to learn more about promises?  <a href="http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html">Great blog post</a></li>
</ul>

Remote Database Links (SmileUpp):
<ul>
<li><a href="https://couchdb-396c4f.smileupps.com/_utils/index.html">Admin Tools</a></li>
<li>Url to sync to:  https://couchdb-396c4f.smileupps.com/codemash</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date><![CDATA[2016-01-01 17:13:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-01 22:13:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hybrid-dl]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[codemash]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://aptobits.com/2016/01/460/</link>
		<pubDate>Sat, 02 Jan 2016 00:34:35 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=460</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>460</wp:post_id>
		<wp:post_date><![CDATA[2016-01-01 19:34:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-02 00:34:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[460]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="main"><![CDATA[main]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up Jenkins CI on an Amazon EC2 Linux Instance</title>
		<link>http://aptobits.com/2012/09/setting-up-jenkins-ci-on-an-amazon-ec2-linux-instance/</link>
		<pubDate>Sat, 01 Sep 2012 05:33:18 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity in the cloud. In this post I'm going to document my steps creating an EC2 instance and setting up a Jenkins CI server on it.  I'll assume limited familiarity with Amazon EC2, Linux, and Jenkins.<!--more-->
<h1>Spinning up an EC2 Instance</h1>
You'll need to sign up for Amazon's EC2 service on the <a title="Amazon Web Services" href="http://aws.amazon.com" target="_blank">Amazon Web Services</a> site if you haven't already.  After that you can head over to your <a title="EC2 Console" href="https://console.aws.amazon.com/ec2/" target="_blank">EC2 Console</a> and select "<em>Launch Instance</em>".  Select the Classic Wizard, then "<em>Ubuntu Server 12.04 LTS</em>" and leave it on 64-bit.  Accept the defaults on the next three screens, and then add a value for the Name tag.
<p style="text-align: center;"><a href="http://test.aptobits.com/wp-content/uploads/2012/08/EC2-Management-Console.jpg"><img class="aligncenter wp-image-76" title="EC2 Management Console" src="http://test.aptobits.com/wp-content/uploads/2012/08/EC2-Management-Console.jpg" alt="" width="872" height="593" /></a></p>
These tags will show up in your EC2 console later on, so it's helpful to give this a good name.

At this point you should be on the Create Key Pair screen.  Click create a new key pair if you don't already have one, enter a name, and then download the file.  Save it some place close to your home directory because you'll need to type the location to this file into a terminal later.

You'll need to create a new security group.  Be sure to allow HTTP, HTTPS and SSH:

<a href="http://test.aptobits.com/wp-content/uploads/2012/08/EC2-Management-Console-1.jpg"><img class="aligncenter size-full wp-image-77" title="Security Group Configuration" src="http://test.aptobits.com/wp-content/uploads/2012/08/EC2-Management-Console-1.jpg" alt="" width="871" height="593" /></a>

Click Launch, wait for the green light and you're all set!
<h1>SSH to the Instance</h1>
Amazon will complain about the file permissions on your key file, so we'll need to open up a terminal and make your key private before we can connect:
<pre lang="bash">chmod 400 ~/.ec2/kmckeeKey.pem</pre>
Right click the instance in your EC2 console and select <em>Connect.</em> Expand the "<em>Connect with a Standalone SSH client</em>" node, and copy the code snippet that's in there to your clipboard.   Paste that into a terminal but don't commit it yet.  You'll need to update the .pem file parameter to point to wherever you saved your key file.  Also, change the "root" to "ubuntu".  So it should actually look something like this:
<pre lang="bash">ssh -i ~/.ec2/kmckeeKey.pem ubuntu@ec2-XX-XXX-XX-XXX.us-west-2.compute.amazonaws.com</pre>
Run that command in terminal, and if all goes well you should be connected to your instance.
<h1>Install nginx</h1>
nginx, pronounced Engine-X, is a lightweight web server/reverse proxy that we're going to use to proxy port 80 over to port 8080 (which is what Jenkins runs on by default).  You might be able to skip this and just change Jenkins to run on port 80, but we're going to do it with nginx.  Why not?

Install and start nginx:
<pre lang="bash">sudo apt-get install nginx
sudo /etc/init.d/nginx start</pre>
At this point you should be able to hit your EC2 instance from a browser and get back a page from nginx.  Jump back into the EC2 console, select your instance and grab the Public DNS URL to try it out.
<h1>Install Jenkins</h1>
<pre lang="bash">wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo aptitude update
sudo aptitude install jenkins

# Start it!
sudo /etc/init.d/jenkins start</pre>
<h1>Configure nginx as a Reverse Proxy</h1>
We've already installed nginx, but now we need to jump back and configure it to act as a reverse proxy.  Any requests coming in on port 80 should be routed through to 8080 so that Jenkins handles them.
<pre lang="bash"># Open up the config file in vi
sudo vi /etc/nginx/nginx.conf</pre>
If you're not sure how to edit a file with vi, check out this <a title="vi crash course" href="http://www.arekdreyer.com/articles/crash-course-on-running-the-vi-editor" target="_blank">tutorial</a>.

Modify the config file to match what I have below (adding the server definition right before the end of the http):
<pre>http {

        # ...Omitted for clarity...

        include /etc/nginx/conf.d/*.conf;    # This line not modified.
        include /etc/nginx/sites-enabled/*;  # This line not modified.

        ##
        # Reverse proxy port 80 to port 8080 for Jenkins
        ##
        server {
                listen 80 default;
                server_name ec2-XX-XXX-XX-XXX.us-west-2.compute.amazonaws.com;
                server_names_hash_bucket_size: 128;
                location /{
                        proxy_pass http://127.0.0.1:8080;
                }
        }
}  # This line not modified.</pre>
The syntax of this configuration file looks a little bizarre (what's up with the slash near the opening curly brace?), but that's how it needs to be.

Restart nginx:
<pre lang="bash">sudo /etc/init.d/nginx restart</pre>
Open up a browser and hit your site again.  You should see Jenkins!
<h1>Lock it down</h1>
At this point your site is public and there's really nothing preventing someone coming and messing around on your server.

From your Jenkins dashboard, go to Manage Jenkins &gt; Configure System.
Check the "Enable Security" check box that's hiding out near the top of the page.
<a href="http://test.aptobits.com/wp-content/uploads/2012/08/Configure-System-Jenkins.jpg"><img class="aligncenter size-medium wp-image-86" title="Configure System [Jenkins]" src="http://test.aptobits.com/wp-content/uploads/2012/08/Configure-System-Jenkins-300x174.jpg" alt="" width="300" height="174" /></a>Set your Security Realm to "Jenkins's own user database" and disable "Allow users to sign up".  Under Authorization, select "Matrix-based security".

Next we're going to grant rights to your user name (even though we haven't created the user yet - we'll do that next).  Enter your desired username in the "User/group to add:" textbox and click add.  Grant yourself all permissions in the matrix and you're all set.  There's a nice little shortcut button on the far right that you might need to side-scroll for.
<a href="http://test.aptobits.com/wp-content/uploads/2012/08/Configure-System-Jenkins-1.jpg"><img class="aligncenter size-medium wp-image-87" title="Configure System [Jenkins]-1" src="http://test.aptobits.com/wp-content/uploads/2012/08/Configure-System-Jenkins-1-300x160.jpg" alt="" width="300" height="160" /></a>

Click the Save button, it will prompt you to create a new user, and you should be all set to start creating jobs.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date><![CDATA[2012-09-01 01:33:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-09-01 05:33:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[setting-up-jenkins-ci-on-an-amazon-ec2-linux-instance]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ci"><![CDATA[CI]]></category>
		<category domain="post_tag" nicename="ec2"><![CDATA[EC2]]></category>
		<category domain="post_tag" nicename="jenkins"><![CDATA[Jenkins]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="tutorials"><![CDATA[Tutorials]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_overridden]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[EC2, Jenkins, Linux, Continuous Integration]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Setting up Jenkins CI on an Amazon EC2 Linux Instance]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[Kim G]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[raket.dev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.149.144.204]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-03 06:34:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-03 10:34:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370255680.8050899505615234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376413003.9770419597625732421875;s:7:"message";s:45:"kmckee changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[dave]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[david.rossellat@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[115.78.72.6]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-11 09:07:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-11 13:07:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great tutorial. everything worked for me, except:

server_name_ needs to be:
server_name ec2-XX-XXX-XX-XXX.us-west-2.compute.amazonaws.com

Also, I had to add server_names_hash_bucket_size: 128]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376226428.5477950572967529296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376412990.8670508861541748046875;s:7:"message";s:45:"kmckee changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Kyle McKee]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mckee.kyle@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[75.118.10.172]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-29 22:43:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-30 02:43:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Dave, I updated the post based on your feedback.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377830586.4487740993499755859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>144</wp:comment_id>
			<wp:comment_author><![CDATA[jesus gollonet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jesusgollonet@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://jesusgollonet.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[212.187.81.115]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-15 18:08:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-15 22:08:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just tried this and it almost worked right away, so thanks!
One comment:
Dave's proposed line should read

server_names_hash_bucket_size 128;

(i.e., no colon), and it should be outside the server declaration. It actually appears in /etc/nginx/nginx.conf with a default value of 64 directly inside the http group]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1381874911.6754190921783447265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389364076.7300579547882080078125;s:7:"message";s:45:"kmckee changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>180</wp:comment_id>
			<wp:comment_author><![CDATA[Daniel]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[no_email@blah.se]]></wp:comment_author_email>
			<wp:comment_author_url>http://google.se</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[178.78.251.48]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-30 17:43:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-30 21:43:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

Agree with the comments above, it was a really great tutorial. However, I ran into an issue when following it to the point.

Using: 
"listen 80 default;"

Gave me this error when trying to restart nginx:
2014/07/30 21:33:55 [emerg] 5387#0: a duplicate default server for 0.0.0.0:80 in /etc/nginx/nginx.conf:79
nginx: configuration file /etc/nginx/nginx.conf test failed

However, replacing it with:
"listen 80;"

As suggested here:
https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+behind+an+NGinX+reverse+proxy

Solved the issue for me. 

Again, great tutorial!

/Daniel]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406756614.5383570194244384765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406989399.292459011077880859375;s:7:"message";s:45:"kmckee changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8423</wp:comment_id>
			<wp:comment_author><![CDATA[Edwaed]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[edhex.grandmaster@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[188.115.136.9]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-09 14:46:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-09 19:46:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[it doesn't work((
i got: ubuntu@ip-172-##-##-##:~$ sudo /etc/init.d/jenkins start
 * Starting Jenkins Continuous Integration Server jenkins                                                                                                                                            [ OK ] 

and no access from:  ec2-XX-XXX-XX-XXX.us-west-2.compute.amazonaws.com:80]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1420832763.3632729053497314453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423168063.99524593353271484375;s:7:"message";s:45:"kmckee changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Comments are not the Goal</title>
		<link>http://aptobits.com/2012/10/comments-are-not-the-goal/</link>
		<pubDate>Mon, 01 Oct 2012 23:48:23 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[I used to think that writing more comments increased the readability of my code, but I've come to realize that <strong>comments frequently hurt readability</strong>. That might sound a little trollish, but here's why I think it's true:
<ul>
	<li>Comments allow you to stop refactoring prematurely.</li>
	<li>Comments aren't kept up to date.  It's really easy for this to happen because the association between a comment and the related code is very weak.</li>
	<li>Comments that explain what code is doing are a <a title="Don't Repeat Yourself" href="http://en.wikipedia.org/wiki/Don't_repeat_yourself" target="_blank">DRY</a> violation.  Your code should do that.</li>
	<li>Frivolous commenting devalues your meaningful comments.  Your reader's attention is a scarce resource - don't waste it!</li>
</ul>
So, in my mind, the question really becomes "<em>What is the best way to make this code easier to understand?"</em><!--more-->
<h1>Method Names</h1>
When I see a comment that summarizes what the next few lines of code is doing, my first reaction is to extract that code into a new method and use the comment to name my method.

I prefer a method name because the relationship between a method and it's implementation is much stronger than the relationship between a comment and it's related code.  A method name, by definition, tells you something meaningful about the behavior of the code contained within it.  It has a clearly defined scope.  A comment is just a statement within your code.  It has no scope, and is only weakly related to 'nearby' code.  Vertical spacing can be used to help define 'nearby', but it's still very subjective.

If you're adding a line of code into some existing code there's no tangible connection between what you're changing and a comment that appears 15 lines before it.  <em>It's not natural to search backwards for a comment that may or may not exist.</em>

However, if you were adding a line of code to a short method it's much easier to make the connection.  <em>It's natural to think "Does this method still do what it says it's doing?"</em>

Method names also have much higher visibility than comments.  Every time someone calls your method, they're forced to type out your method name.  Consumers of your method are essentially forced to acknowledge your name.  A method name is visible from both the caller and the callee, while a comment is only visible from one or the other.
<h1>Unit Tests Reduce Comment Dependence</h1>
Well written unit tests do a fantastic job of documenting your code.  Unit tests provide executable documentation of how your code behaves under different scenarios.  While someone might alter the behavior of a method and forget to update a comment, they're guaranteed not to forget to update a unit test because it will fail.  For this reason, unit tests are more likely to provide accurate documentation of behavior than comments.

Unit tests also provide centralized documentation.  Rather than having comments that explain behavior strewn all around the code, you're encouraged to document them consistently and put them in one place.  If you're writing your tests in a BDD style, you can even have it generate some fancy output that describes your objects.

Take a look at this MSpec output that's generated by my tests:

<a href="http://test.aptobits.com/wp-content/uploads/2012/09/stringkata_output.png"><img class="aligncenter size-full wp-image-144" title="String Calculator Kata Specs" src="http://test.aptobits.com/wp-content/uploads/2012/09/stringkata_output.png" alt="" width="586" height="415" /></a>

This output was generated from tests I wrote while working on Roy Osherove's <a href="http://osherove.com/tdd-kata-1/">String Calculator Kata</a>.  Every line in this output is backed by a test.  I can say with a fair amount of certainty that these statements are accurate and will remain so.
<h1>Good Comments?</h1>
All code tells you how it's doing something.  Well written code makes it easy to understand what it's doing.  It isn't always intuitive why you might need to do something, though.  Comments are great for explaining why.

Triple slash comments in C# are useful if you're creating an API that's going to be consumed by someone else.  I wouldn't expect the person using my API to have any familiarity nor any desire to become familiar with my code or my unit tests.  I'm willing to sacrifice being DRY and summarize what my code does in a comment at this point because it provides a better experience for the person consuming my API.

In general, if my own code is the only consumer of a method I don't write triple slash comments.  This forces me to keep my method names clear and avoids duplicating intent.
<h1>Final Thoughts</h1>
The next time you're writing a comment, stop and ask yourself why.  Could you refactor the code so you don't need it?  Should it actually be a unit test?  Does it add enough value to offset the cost of someone having to read it?

Comments are not the goal.  Clarity is.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date><![CDATA[2012-10-01 19:48:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-10-01 23:48:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[comments-are-not-the-goal]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="comments"><![CDATA[comments]]></category>
		<category domain="post_tag" nicename="naming"><![CDATA[naming]]></category>
		<category domain="category" nicename="opinions"><![CDATA[Opinions]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[Code Comments, Self Documenting Code, Method Names]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_overridden]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6983</wp:comment_id>
			<wp:comment_author><![CDATA[Tim Smelser]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tsmelser@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[76.188.28.237]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-12-15 17:11:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-12-15 22:11:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I was going to leave a comment ... but I didn't want to hurt the readability of your blog.
:)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1418681474.71162700653076171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423168045.5773179531097412109375;s:7:"message";s:45:"kmckee changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15855</wp:comment_id>
			<wp:comment_author><![CDATA[New healthy man]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[marcelaridgley6907@last-chance.pro]]></wp:comment_author_email>
			<wp:comment_author_url>http://bit.ly/2f0xJ92</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.236.230.204]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-11-11 17:37:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-11-11 22:37:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your stuff is very exciting. http://bit.ly/2f0xJ92]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1478903855.67500209808349609375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Traffic Light Build Indicator</title>
		<link>http://aptobits.com/2013/01/traffic-light-build-indicator/</link>
		<pubDate>Sun, 06 Jan 2013 23:48:04 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=216</guid>
		<description></description>
		<content:encoded><![CDATA[Continuous integration is great, but it's only as effective as the visibility of the build status.  You can use things like email notifications or <a title="Hudson Tray Tracker" href="http://code.google.com/p/hudson-tray-tracker/" target="_blank">Hudson Tray Tracker</a> to help increase the visibility, but I wanted something physical that could radiate the current build status.  Something everyone could see; even while you're grabbing a cup of coffee.  So, I decided to try and make a traffic light build indicator.

<p style="text-align: center;"><a href="http://aptobits.com/2013/01/traffic-light-build-indicator/imgp2632/" rel="attachment wp-att-227"><img class="aligncenter  wp-image-227" alt="Traffic Light" src="http://aptobits.com/wp-content/uploads/2013/01/IMGP2632.jpg" width="260" /></a></p>
<!--more-->
<h1 style="text-align: left;">Shopping List</h1>
<ul>
	<li><a title="Teensy 2.0 (with pins)" href="http://www.pjrc.com/store/teensy_pins.html" target="_blank">Teensy 2.0 (with pins)</a> - $19</li>
	<li><a href="http://www.amazon.com/microtivity-400-point-Experiment-Breadboard-Jumper/dp/B004RXKWDQ/ref=sr_1_5?ie=UTF8&amp;qid=1357508413&amp;sr=8-5&amp;keywords=breadboard" target="_blank">Breadboard and some wires</a> - $9</li>
	<li><a href="http://www.amazon.com/SainSmart-4-Channel-Relay-Module-Arduino/dp/B0057OC5O8/ref=sr_1_1?s=electronics&amp;ie=UTF8&amp;qid=1357508534&amp;sr=1-1&amp;keywords=relay+arduino" target="_blank">4 channel relay</a> - $9</li>
	<li>Light bulbs - $4 (Home Depot / Lowes)</li>
	<li><a href="http://www.amazon.com/gp/product/B003N3RJDW/ref=oh_details_o03_s00_i00" target="_blank">Large Blinking Traffic Light</a> - $20</li>
</ul>
Total: $61
<h1>Disclaimer</h1>
I'm hacking this together with pretty limited experience working with electronics.  About 4 credit hours, to be precise.  Don't leave this thing on when you aren't around.
<h1>Light</h1>
When you turn the light on each of the lights will flicker randomly.  I was a little surprised when I opened the light that there wasn't really much in there.  All three of the lights are wired up in series and connected straight to the power source.  It turns out the light bulbs have a thermal switch inside of them that causes them to flicker on and off.  The first thing you'll want to do is replace those bulbs with some regular bulbs.  Next up, go ahead and cut all the positive lines that join the bulbs together.  You'll need to make the positive leads a little longer and hook each of them up to the relay.  Connect the positive line from the power cord into each of the relays.
<h1 style="text-align: left;"><a href="http://aptobits.com/2013/01/traffic-light-build-indicator/relay/" rel="attachment wp-att-240"><img class="aligncenter  wp-image-240" alt="Build Light Relay" src="http://aptobits.com/wp-content/uploads/2013/01/Relay.jpg" width="260" /></a>Teensy</h1>
Drop the Teensy into the breadboard and hook B0, B1, and B2 up to the relay.  B0 should be connected to the input that drives the red relay, B1 is yellow, and B2 is green.  Hook VCC and GND up to the relay as well and you're done wiring.
<p style="text-align: center;"><a href="http://aptobits.com/2013/01/traffic-light-build-indicator/teensy/" rel="attachment wp-att-238"><img class="aligncenter  wp-image-238" alt="Teensy in the Build Light" src="http://aptobits.com/wp-content/uploads/2013/01/Teensy.jpg" width="260" /></a></p>
I used some two sided tape to secure the teensy to the bottom of the traffic light. You might also need to drill a hole in the back of the light so you can hook up a USB cable to the Teensy.

Here's what the whole thing looks like:
<p style="text-align: center;"><a href="http://aptobits.com/2013/01/traffic-light-build-indicator/light-guts/" rel="attachment wp-att-239"><img class="aligncenter  wp-image-239" alt="Build Light Guts" src="http://aptobits.com/wp-content/uploads/2013/01/light-guts.jpg" width="260" height="239" /></a></p>
Connect the Teensy to your computer and use Arduino to deploy the <a title="Teensy Light Controller Sketch" href="https://github.com/kmckee/JenkinsTrafficLight/blob/master/TeensyLightControllerSketch/TeensyLightControllerSketch.ino">Teensy Light Controller sketch</a> to the device.  After the firmware is on the device you can use the serial monitor feature in Arduino to test out the wiring.  If you send a "1" to the device it should turn on the red light.  Sending a 2 will turn on yellow, 3 is green.  5, 6, and 7 will turn off each of the lights.  The relay makes a nice clicking noise when a light is toggled.
<h1>The Console App</h1>
At this point you can turn the lights on and off by writing some integers to a serial port.  I threw together a console application that will poll a Jenkins server and push values to the light.  It's on GitHub - <a href="https://github.com/kmckee/JenkinsTrafficLight">go fork it</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date><![CDATA[2013-01-06 18:48:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-06 23:48:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[traffic-light-build-indicator]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="jenkins"><![CDATA[Jenkins]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="teensy"><![CDATA[Teensy]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_overridden]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:13:"enable-ribbon";s:4:"Show";s:10:"github-url";s:45:"https://github.com/kmckee/JenkinsTrafficLight";s:11:"ribbon-type";i:3;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[Kamal Sharma]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kamalsharma31@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.69.224.180]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-13 09:47:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-13 13:47:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[HI,

I was going through your light indicator and found it interesting so I am trying it out..I have a question regarding Arduino and USB board, how do you connect the USB board to the Arduino board, I am thinking of using the Ethernet board, Which Arduino did you used for this project?  Just not sure the link between USB board and Arduino how they will get connected and interact to each other?  

From what I understood you are using the USB board to activate and deactivate the relays so what is arduino used for?
thanks for the feedback..]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376401652.08104705810546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376412994.089170932769775390625;s:7:"message";s:45:"kmckee changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[Kyle McKee]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mckee.kyle@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[75.118.10.172]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-29 22:38:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-30 02:38:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Kamal,

There isn't a separate USB board for this.  The tiny little board that you can see plugged into the breadboard is a teensy, which is like a slimmed down cheap version of an arduino.  The other board with the big blue boxes on it is the relay, which is what controls the AC current for the light.  

So, the overall flow is like this:  There's an app running on the PC that's writing data to a USB port on the pc.  The Teensy is listening for these messages on it's USB port.  When it receives one, it writes HIGH or LOW to the appropriate pins to drive the separate relay board.  The relays open and close, and that controls the AC current that powers the actual lights themselves.

Hope this helps.  Thanks for posting!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377830328.0931720733642578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"kmckee";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Theoretical vs Empirical Estimation of Software Development Effort</title>
		<link>http://aptobits.com/2014/08/theoretical-vs-empirical-estimation-software-development-effort/</link>
		<pubDate>Mon, 18 Aug 2014 14:53:41 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[Lean thinking tells us that any expenditure of resources that does not create value for the customer is waste. If you could accurately tell your partners when your project would be complete, that would probably be incredibly valuable to them. So why, then, do some people consider it wasteful to have developers estimate?
<h1>Theoretical Estimation</h1>
Most software estimation activities that I've seen in my career are what I'd consider to be theoretical estimation. This includes poker planning, t-shirt sizing, Fibonnaci sizing, etc. A few concerns I have with these approaches are:
<ul>
	<li>You don't know what you don't know. You really can't estimate what you don't know.</li>
	<li>Each card estimate is basically pulled out of thin air.</li>
	<li><a title="Software Development Estimation" href="http://en.wikipedia.org/wiki/Software_development_effort_estimation" target="_blank">Studies have shown </a>that even when we are 90% sure about the amount of effort that something will require, we're wrong about it 60-70% of the time.</li>
</ul>
Card estimation doesn't provide value because it's inaccurate, plain and simple. In all of these techniques, <em>you're literally making up numbers</em>.  Wrong numbers.

The activity of estimating itself is waste, but even more than that you're going to break trust with your business when reality doesn't match your estimates. When that happens, and it will, all you can say is "Sorry, I'll try to guess better next time."

<strong>I don't know about you, but I don't want to work this way anymore.</strong>
<blockquote>Hofstadter's Law: It always takes longer than you expect, even when you take into account Hofstadter's Law.
— Douglas Hofstadter, Gödel, Escher, Bach: An Eternal Golden Braid</blockquote>
<h1>Empirical Estimation</h1>
How can we get away from making up numbers, then?  You have options, but I'm going to briefly describe a pretty light weight approach that I've seen work well for a few different teams I've coached.
<h2>Small Story Cards</h2>
You need to be working in small slices.  You should be doing this for a host of other reasons, but, it's particularly important if you're going to move away from having developers estimating.

If all of your cards are "Small", then you can just count the number of things that were completed.  What you'll find is that you'll get  about the same number of things done per week regardless of their size.  In other words, you'll get 5 cards done per week.  It doesn't matter if you estimate the size of the cards or not, you'll still get the same 5 cards done.  It averages out.  This also puts a positive pressure on slicing small, which is a Good Thing.

Of course all the other rules of story card slicing still apply.  Don't overslice your cards down into technical tasks.  All of your cards should still show <em>demonstrable</em> progress.  Always ask yourself, "How will I demo this card to the business?"
<h2>Metrics</h2>
A couple of metrics that you'll want to keep track of are your card cycle time time and the growth rate of cards for your project.

Your card cycle time is the entire time that it's actively being worked on.  This begins when you do your story card meeting with your product owner.  In a perfect world it would end after the feature is deployed to production.  In practice, however, sometimes it makes more sense to consider the card done when the card is accepted by your Product Owner.

Card growth is another important metric to track as it affects your projections.  Based on the rate at which cards are being discovered (growth) and the rate at which cards are being completed we can project when we will complete some subset of work.
<h3>So, where does this leave you?</h3>
<ul>
	<li>Team spends close to 0 time estimating.</li>
	<li>Project managers have a much more active role in estimation.</li>
	<li>Team is focused on finding the smallest slices that will deliver demonstrable value
<ul>
	<li>Small slices mean more options for the business (ability to pivot and defer less valuable work).</li>
	<li>Small slices increase team morale (sense of completion).</li>
	<li>Small slices lead to higher quality code (narrower focus by the team).</li>
</ul>
</li>
	<li>Estimates are based on facts rather than the opinions of team members.</li>
	<li>Increased transparency with your Product Owner and stakeholders.</li>
</ul>
This certainly isn't the only way to run a team, but, I think it's underused in comparison to a lot of the more opinion based estimation techniques I see in use.  I'd be curious to hear if anyone else has any experience with other techniques that base estimation on empirical data.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date><![CDATA[2014-08-18 10:53:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-08-18 14:53:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[theoretical-vs-empirical-estimation-software-development-effort]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="estimates"><![CDATA[estimates]]></category>
		<category domain="category" nicename="opinions"><![CDATA[Opinions]]></category>
		<category domain="post_tag" nicename="process"><![CDATA[process]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[software estimates]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14456</wp:comment_id>
			<wp:comment_author><![CDATA[&#12304;&#36865;&#26009;&#28961;&#26009;&#12305;&#33050;&#20184;&#12365;&#12510;&#12483;&#12488;&#12524;&#12473;&#12288;&#12475;&#12511;&#12480;&#12502;&#12523;&#12288;&#20998;&#21106;&#12288;&#33050;&#12398;&#39640;&#12373; 25cm &#12505;&#12483;&#12489;]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jivppgm@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.siteconomics.ru/mlckeivg/604.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[2002:5bc8:c27::5bc8:c27]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-11-07 21:30:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-11-08 02:30:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&#65281;&#12502;&#12483;&#12463;&#12510;&#12540;&#12463;&#12375;&#12289;&#12371;&#12398;&#12452;&#12531;&#12479;&#12540;&#12493;&#12483;&#12488;&#12469;&#12452;&#12488;&#19978;&#12391;&#12356;&#12367;&#12388;&#12363;&#12398;&#26412;&#24403;&#12395;&#36062;&#12398;&#20869;&#23481;&#12434;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14589</wp:comment_id>
			<wp:comment_author><![CDATA[Elida]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[linettegholson@t-online.de]]></wp:comment_author_email>
			<wp:comment_author_url>http://rochesternylocksmith.s3-website-us-east-1.amazonaws.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[104.223.38.112]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-11-30 18:51:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-11-30 23:51:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Lost your car keys, or perhaps inadvertently broke in the ignition. These days,
the customer is king and the service industry needs tto respect the 
customer. Never be alone: It is always better thqt you shall hafe someone withh you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1448927476.220016002655029296875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Hacking a HexBug Robot</title>
		<link>http://aptobits.com/2014/01/hacking-a-hexbug-robot/</link>
		<pubDate>Sat, 11 Jan 2014 03:18:03 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=275</guid>
		<description></description>
		<content:encoded><![CDATA[I found one of these little <a href="http://www.amazon.com/gp/product/B004HL0A12/ref=as_li_tf_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B004HL0A12&amp;linkCode=as2&amp;tag=aptobits-20">HEXBUG Hexbug Spider (colors may vary)</a><img style="border: none !important; margin: 0px !important;" alt="" src="http://ir-na.amazon-adsystem.com/e/ir?t=aptobits-20&amp;l=as2&amp;o=1&amp;a=B004HL0A12" width="1" height="1" border="0" /> on Amazon and thought it might be fun to try and hook an Arduino up to it.  It's about the size of a fist and is controlled by an infrared remote control.

The robot's movement is controlled by two small servos .  The first servo causes the top of the robot to rotate 360 degrees without moving the feet.  The second servo causes the legs to move.  The legs are mechanically linked to the top of the robot in such a way that the robot will always walk in the direction that the top of the robot is facing.

Here's a video of my hacked HexBug in action:
<iframe src="//www.youtube.com/embed/fc8a2T5FpLU" height="315" width="560" allowfullscreen="" frameborder="0"></iframe>

After opening up the robot I was able to use a multimeter to probe the leads running up to the motors and determine that they're operating at about 3.3v.  Since the Arduino Nano's digital IO pins are 3.3v when high it made this a really simple project.

Parts List:
<script charset="utf-8" type="text/javascript" src="http://ws-na.amazon-adsystem.com/widgets/q?rt=tf_mfw&amp;ServiceVersion=20070822&amp;MarketPlace=US&amp;ID=V20070822%2FUS%2Faptobits-20%2F8001%2F2e4ad14d-badd-4dd4-abb6-d07f0bff6179">// <![CDATA[


// ]]]]><![CDATA[></script>

<noscript><A HREF="http://ws-na.amazon-adsystem.com/widgets/q?rt=tf_mfw&#038;ServiceVersion=20070822&#038;MarketPlace=US&#038;ID=V20070822%2FUS%2Faptobits-20%2F8001%2F2e4ad14d-badd-4dd4-abb6-d07f0bff6179&#038;Operation=NoScript">Amazon.com Widgets</A></noscript>Wiring Schematic:
<p style="text-align: center;"><a href="http://aptobits.com/wp-content/uploads/2014/01/SpiderBotSchematic.png"><img class="aligncenter  wp-image-279" alt="SpiderBotSchematic" src="http://aptobits.com/wp-content/uploads/2014/01/SpiderBotSchematic.png" width="500" /></a></p>
Note that the RXD line on the Bluetooth Shield is connect to TXD on the arduino, and TX goes to RX. I wasn't able to pair with the device for quite some time, and eventually the person I was pairing with figured out I wired that up backwards.

The code I wrote to control everything is <a title="Spider Bot Code on GitHub" href="https://github.com/kmckee/spider_bot" target="_blank">available on GitHub</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date><![CDATA[2014-01-10 22:18:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-01-11 03:18:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hacking-a-hexbug-robot]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="arduino"><![CDATA[arduino]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="toy-hacking"><![CDATA[toy hacking]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_overridden]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:13:"enable-ribbon";s:4:"Show";s:10:"github-url";s:36:"https://github.com/kmckee/spider_bot";s:11:"ribbon-type";i:1;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15323</wp:comment_id>
			<wp:comment_author><![CDATA[Constance]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[767ieildz8@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://mhaucgtogmj.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[188.143.232.27]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-20 00:56:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-20 04:56:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pour cela, il faudrait que les transports en commun se dÃ©veloppent et que des actions soient entreprises pour rapprocher les logements des emplois.Au risque de vous dÃ©cevoir, ce n&rsquo;est pas du tout le cas aclettlemune. La voiture a de beaux jours devant elle&#8230;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1463720207.553081989288330078125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Clean Code</title>
		<link>http://aptobits.com/?post_type=works&#038;p=291</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?post_type=works&#038;p=291</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date><![CDATA[2014-08-02 13:41:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[works]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Familiar with Knockout Components</title>
		<link>http://aptobits.com/2015/04/knockout-components/</link>
		<pubDate>Sat, 18 Apr 2015 14:25:14 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=319</guid>
		<description></description>
		<content:encoded><![CDATA[I put together a learning activity for a few teams I'm currently working with to help us get more familiar with Components in KnockoutJS.

<h5>A few reasons to consider Components...</h5>

The most obvious reason is re-use.  By creating a component that represents some chunk of html and it's corresponding behaviors you make it portable. You can drop that component into different spots on the page, or even different pages in your application, and keep your code nice and DRY.

Another reason to consider components is that it encourages composition in your client side view models.  If these components are responsible for retrieving their own data, you can avoid 'god' like controllers with giant dependency graphs.  Instead of getting all the data for the page through one controller action, each component can run through it's own action and get just the data it needs.

Here's the starting point for the exercise:

<a title="Starting point" href="http://jsfiddle.net/kmckee8372/kbb31abt/">http://jsfiddle.net/kmckee8372/kbb31abt/</a>

Here it is after I played with it for a bit:

<a title="End point?" href="http://jsfiddle.net/kmckee8372/20haq73w/">http://jsfiddle.net/kmckee8372/20haq73w/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>319</wp:post_id>
		<wp:post_date><![CDATA[2015-04-18 10:25:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-18 14:25:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[knockout-components]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="knockoutjs"><![CDATA[KnockoutJS]]></category>
		<category domain="category" nicename="tutorials"><![CDATA[Tutorials]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_8c07710ed3bc4827dbaf4a6376469811]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_68f0d502e145edc3f1865507239251a1]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Feedback Loops</title>
		<link>http://aptobits.com/2015/10/feedback-loops/</link>
		<pubDate>Sat, 03 Oct 2015 14:12:20 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=332</guid>
		<description></description>
		<content:encoded><![CDATA[Building great software is all about feedback.  

The faster you're getting feedback about what you're building, the better the decisions you'll make about what to build next.  

Traditionally, software teams have only really had a couple of feedback loops: 
<a href="http://aptobits.com/wp-content/uploads/2015/04/Types_of_Testing_traditional.png"><img src="http://aptobits.com/wp-content/uploads/2015/04/Types_of_Testing_traditional.png" alt="Types_of_Testing_traditional" width="1988" height="1022" class="aligncenter size-full wp-image-334" /></a>

The smaller loop here is feedback from manual / exploratory testing.  The larger loop is slower feedback from your customers.  If you want to be able to embrace changing requirements (and you should), you won't be able to do it well without better feedback.

Here's what a better model might look like:
<a href="http://aptobits.com/wp-content/uploads/2015/04/Types_of_Testing_rich_feedback.png"><img src="http://aptobits.com/wp-content/uploads/2015/04/Types_of_Testing_rich_feedback.png" alt="Types_of_Testing_rich_feedback" width="1984" height="984" class="aligncenter size-full wp-image-335" /></a>

Embracing change on development projects is not possible without also changing your engineering practices to support it.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>332</wp:post_id>
		<wp:post_date><![CDATA[2015-10-03 10:12:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-03 14:12:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[feedback-loops]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="feedback"><![CDATA[feedback]]></category>
		<category domain="category" nicename="opinions"><![CDATA[Opinions]]></category>
		<category domain="post_tag" nicename="process"><![CDATA[process]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[types-of-testing]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with Cordova</title>
		<link>http://aptobits.com/2015/10/getting-started-with-cordova/</link>
		<pubDate>Sun, 04 Oct 2015 01:51:56 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=348</guid>
		<description></description>
		<content:encoded><![CDATA[Have you been telling yourself you're going to do mobile, but never got around to it? Wouldn't it be awesome if you could leverage your existing web skills to quickly build native mobile apps? Cordova is a platform for building native mobile applications that lets you do exactly that.

In this blog series, I'll walk you through building native mobile apps using HTML, CSS and JavaScript. Cordova will take your html and javascript and bundle them up inside a native application.  The native application will host an embedded web browser that will host your web app.

Other posts in this series:
<ul>
	<li><a href="http://aptobits.com/2015/10/getting-started-with-cordova/">Getting Started with Cordova</a></li>
        <li><a href="http://aptobits.com/2015/10/intro-to-ionic/">Intro to Ionic</a></li>
        <li><a href="http://aptobits.com/2015/10/build-a-calculator-with-ionic/">Build a Calculator with Ionic - Part 1 of 2</a></li>
        <li>Build a Calculator with Ionic - Part 2 of 2 (Coming soon)</li>
</ul>
<h1>Prerequisities</h1>
<h2>Node.js</h2>
The first thing you'll need to do is install Node. I will be using v4.1.1 in the example.

You can <a href="https://nodejs.org/en/download/">download Node here</a>.

Node.js is an open-source, cross-platform runtime environment for developing server-side web applications. Node.js applications are written in JavaScript and can be run within the Node.js runtime on OS X, Microsoft Windows, Linux, FreeBSD, NonStop, IBM AIX, IBM System z and IBM i.
<h2>Node Packages</h2>
Node ships with a tool called the Node Package Manager, or npm for short. The package manager is a command line utility that is used to download and install node packages for your projects. As of the time of writing, there are over 190,000 node modules with an average of 360 new modules being added every day.

<a href="http://aptobits.com/wp-content/uploads/2015/10/module_counts.png"><img class="aligncenter size-full wp-image-350" src="http://aptobits.com/wp-content/uploads/2015/10/module_counts.png" alt="module_counts" width="796" height="422" /></a>
<small>See <a href="http://www.modulecounts.com" target="_blank">modulecounts.com</a> for updated stats.</small>

Some node packages can also include command line utilities that are added to your PATH. When you install these packages, you'll want to install them globally by using the -g switch. Lets use npm to install a couple CLI utilities that we'll be using.

<pre lang="bash">
npm install -g cordova
</pre>

If you're on a mac and want to deploy to the iOS emulator you'll also want to install the ios simulator module.
<pre lang="bash">
npm install -g ios-sim
</pre>

<h2>Create a Cordova App</h2>
To create a new Cordova app, you'll want to cd into whatever directory you keep your projects and run this cordova create command, passing in the directory name you would like to create the project in.
<pre lang="bash">
cd ~/code/
cordova create hello_world
</pre>

Let's take a look at what this created for us.
<a href="http://aptobits.com/wp-content/uploads/2015/10/vanilla_cordova_tree.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/vanilla_cordova_tree.png" alt="vanilla_cordova_tree" width="299" height="291" class="aligncenter size-full wp-image-358" /></a>

<h4>config.xml</h4>
The config.xml holds metadata about your project, the plugins that it uses, and preferences that are applicable to one or more of the platforms that you support.
<h4>hooks\</h4>
Hooks are an extensibility point that can be used to define custom functionality.  You can write custom scripts and wire them into cordova to be run at different points in time.  If you find yourself needing to do something that it feels like cordova won't let you do, take a look at the <a href="https://cordova.apache.org/docs/en/edge/guide_appdev_hooks_index.md.html" target="_blank">documentation for hooks</a>.  
<h4>platforms\</h4>
Your cordova project can be deployed to one or more different device platforms (iOs, Android, Windows Phones, etc).  Currently our project doesn't support any platforms, so this directory is empty.  After we add a platform, this directory will be where you can find the files that support each platform.  If you add support for the iOs platform, for example, the platforms directory would contain a iOs directory that contains the XCode project an all it's supporting files that will ultimately be compiled to the binaries that are deployed to your device.
<h4>plugins\</h4>
Cordova features a plugin system to allow you to add support for different functionalities.  If, for example, you want to use the device's camera, you could add a plugin that would expose the functionality to do so to you through a JavaScript API exposed to you.  More on that later, but for now just know that plugins can be used to add all sorts of functionality to your app that you wouldn't normally be able to use if you were building a traditional mobile website.
<h4>www\</h4>
This is where most of your application code will live.  The index.html page contained in this directory is the entry point for your application.  All other assets that your web application needs, including CSS, HTML, javascript, and images should be contained in this directory.

<h2>Git</h2>
It's a good idea to get a commit in at this point, just in case things get squirrelly.  
<pre lang="bash">
git init
git commit -am "First commit, vanilla cordova app"
</pre>

<h2>Adding Platforms</h2>
Before we can see our app running anywhere, we need to add one or more platforms.  For this tutorial we'll be adding the iOS and Android platforms.  Let's tell Cordova what platforms we'd like to target:
<pre lang="bash">
cordova platform add ios
cordova platform add android
</pre>

<h2>Deploying to the iOS simulator</h2>
Lets go ahead and run our app on an iOS simulator (assuming you're on a mac).  Open up a terminal in the root of your project and run the following command:
<pre lang="bash">
cordova emulate ios
</pre>
If you're following along at home and everything went well, you should see the iOS simulator spin up at this point and load an app that looks like this:
<a href="http://aptobits.com/wp-content/uploads/2015/10/vanilla_cordova.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/vanilla_cordova.png" alt="vanilla_cordova" width="374" height="688" class="aligncenter size-full wp-image-364" /></a>

<h2>Deploying to an Android Simulator</h2>
Unfortunately, getting an android emulator going is a little more involved.  If you're on a windows machine, or you don't have a physical android device that you can use, I recommend you take a look at the <a href="https://cordova.apache.org/docs/en/4.0.0/guide_platforms_android_index.md.html" target="_blank">Android platform documentation</a> to get it installed.

<h2>Deploying to a device</h2>
The easiest way to deploy to a device is to connect a single device to your computer and then run:
<pre lang="bash">
cordova run ios --device
</pre>
or
<pre lang="bash">
cordova run android --device
</pre>

<h2>Wrap up</h2>
That's it!  At this point, you probably want to throw down another git commit.
<pre lang="bash">
git commit -am "Added iOS and Android platforms"
</pre>
With that out of your way, you're ready to start actually working on your app.  Before you start down that road, though, let's take a look at what ionic has to offer over a vanilla cordova installation.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>348</wp:post_id>
		<wp:post_date><![CDATA[2015-10-03 21:51:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-04 01:51:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[getting-started-with-cordova]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cordova"><![CDATA[Cordova]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="tutorials"><![CDATA[Tutorials]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Intro to Ionic</title>
		<link>http://aptobits.com/2015/10/intro-to-ionic/</link>
		<pubDate>Sun, 04 Oct 2015 18:18:52 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=361</guid>
		<description></description>
		<content:encoded><![CDATA[Now that you've mastered all things Cordova in the <a href="http://aptobits.com/2015/10/getting-started-with-cordova/">previous blog post</a>, let's take a look at Ionic and see where that fits in.  

<h2>What is Ionic?</h2>
Ionic sits on top of Cordova and provides some excellent CSS and JavaScript components that are perfect for building mobile apps.  Ionic also ships with a couple of templates that demonstrate how to do common mobile UX patterns and provide a great starting point for a lot of apps.  

<h2>Installing Ionic</h2>
Assuming you've set up Cordova already, the only thing you need to do is globally install the ionic node module:
<pre lang="bash">
npm install -g cordova ionic
</pre>

<h2>Create an Ionic App</h2>
To create a new Ionic app, you'll want to cd into whatever directory you keep your projects and run this ionic start command, passing in the directory name you would like to create the project in and which starter template you would like to use.
<pre lang="bash">
cd ~/code/
ionic start hello_ionic tabs
</pre>

In this example, we created an ionic app inside the ~/code/hello_ionic that starts with a simple tab based layout.  The basic structure of this application is very similar to what we're already familiar with from a basic Cordova app, except now there's a bunch of extra Ionic goodies in there.  One other thing worth noting is that Ionic will automatically add the iOS platform for you if you're on a mac, whereas with Cordova you don't have any platforms by default.

Let's take a look at what this created for us.
<a href="http://aptobits.com/wp-content/uploads/2015/10/vanilla_ionic_tree.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/vanilla_ionic_tree.png" alt="vanilla_ionic_tree" class="aligncenter size-full wp-image-373" style="max-height:600px;" /></a>

<h4>config.xml</h4>
The config.xml holds metadata about your project, the plugins that it uses, and preferences that are applicable to one or more of the platforms that you support.  This is no different from a regular Cordova app.

<h4>hooks\</h4>
Hooks are an extensibility point that can be used to define custom functionality.  You can write custom scripts and wire them into Cordova to be run at different points in time.  Ionic creates a hook by default, but other than that this is really no different from a regular Cordova app.

<h4>platforms\</h4>
Your Cordova project can be deployed to one or more different device platforms (iOs, Android, Windows Phones, etc).  If you're on a mac, you'll find an iOS platform directory contained in here by default.  Other than that, this is no different from a regular Cordova app.

<h4>plugins\</h4>
Cordova features a plugin system to allow you to add support for different functionalities.  If, for example, you want to use the device's camera, you could add a plugin that would expose the functionality to do so to you through a JavaScript API exposed to you.  By default, Ionic will add a few plugins that help to standardize behavior across different platforms.  You don't really need to know much about them for now, just know that they're there.

<h4>www\</h4>
This is where most of your application code will live.  The index.html page contained in this directory is the entry point for your application.  All other assets that your web application needs, including CSS, HTML, javascript, and images should be contained in this directory.  No different from a regular Cordova app.

<h4>Bower</h4>
Ionic sets up Bower you control your client side dependencies.  If you're not familiar with Bower, then for now just know that bower is there and if you wanted to add a client side dependency like, say, jQuery or something like that you would use Bower to do so.

<h4>Gulp</h4>
Ionic also sets you up with a gulpfile and a few tasks in there.  If you're coming from a ruby background, gulp is roughly equivalent to rake.  It's used to create tasks that can be invoked at a command line.  Usually you'll see it used to do things like minification, obfuscation, compiling of SASS and things like that.  

<h4>SASS</h4>
Ionic uses SASS for it's CSS.  SASS stands for Syntactically Awesome StyleSheets.  It's a superset of CSS and can be compiled down to plain old CSS using a gulp task that Ionic creates.

<h4>app.js, controllers.js and services.js</h4>
Finally time for some Angular!  App.js defines the root module, which is 'starter' by default, and it also contains all of your app's routing information.

Controllers.js contains the definitions for, you guessed it, all of our app's controllers.  Out of the box the tabs template contains four controllers for each of the different views the app could be in (one for each tab view, plus one for a detail view of an chat list item).

Services.js contains a simple little factory function definition that returns a mock service that's used to generate some of the data used by the chat views.

It's probably a good idea to break apart the 'controllers.js' and 'services.js' files into separate files.  In general, it's a bad idea to structure angular apps this way.  You want to group things together around domain concepts, not what design pattern the objects conform to.

<h2>Git</h2>
It's a good idea to get a commit in at this point, just in case things get squirrelly.  
<pre lang="bash">
git init
git commit -am "First commit, vanilla ionic app"
</pre>

<h2>Deploying to the iOS simulator</h2>
Lets go ahead and run our app on an iOS simulator (assuming you're on a mac).  Open up a terminal in the root of your project and run the following command:
<pre lang="bash">
ionic emulate ios
</pre>

If you're following along at home and everything went well, you should see the iOS simulator spin up at this point and load an app that looks like this:
<a href="http://aptobits.com/wp-content/uploads/2015/10/vanilla_ionic_app.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/vanilla_ionic_app.png" alt="vanilla_ionic_app" class="aligncenter size-full wp-image-374" style="max-height: 600px;" /></a>

<h2>Conclusion</h2>
As you can see, Ionic added quite a bit of stuff over a vanilla Cordova app.  However, it's given us a lot in return.  Out of the box we have a pretty nice looking app that will scale to all different device sizes and we avoid a lot of the device specific quirkiness that we'd run into if we were creating this from scratch.  Not bad!  Next up, we'll dig deeper into Ionic to understand how it's working and get us to a point where we can start confidently making changes to it.

Other posts in this series:
<ul>
	<li><a href="http://aptobits.com/2015/10/getting-started-with-cordova/">Getting Started with Cordova</a></li>
        <li><a href="http://aptobits.com/2015/10/intro-to-ionic/">Intro to Ionic</a></li>
        <li><a href="http://aptobits.com/2015/10/build-a-calculator-with-ionic/">Build a Calculator with Ionic - Part 1 of 2</a></li>
        <li>Build a Calculator with Ionic - Part 2 of 2 (Coming soon)</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>361</wp:post_id>
		<wp:post_date><![CDATA[2015-10-04 14:18:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-04 18:18:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[intro-to-ionic]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cordova"><![CDATA[Cordova]]></category>
		<category domain="post_tag" nicename="ionic"><![CDATA[Ionic]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="tutorials"><![CDATA[Tutorials]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Build a Calculator with Ionic - Part 1 of 3</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic/</link>
		<pubDate>Sat, 10 Oct 2015 20:23:37 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=392</guid>
		<description></description>
		<content:encoded><![CDATA[In this tutorial, we're going to build a basic calculator app using Ionic.  The calculator app is relatively simple, but you'll learn the following along the way:
<ul>
	<li>Ionic's grid system for layout</li>
	<li>Using other libraries in your app</li>
	<li>Basics of Controllers, Factories, Scope and Binding in Angular</li>
	<li>Using Ionic's icons (Ionicons)</li>
</ul>

Lets get to it.  

<h1>Creating the Project</h1>
Cd into wherever you keep your code, and then create a new blank ionic app:
[bash]
ionic start calculator blank
[/bash]
Next up, cd into the newly created calculator directory and get your first git commit in:
[bash]
cd calculator
git init
git commit -am &quot;Initial Commit&quot;
[/bash]
Now let's send it to the simulator to make sure we've got a working walking skeleton.
[bash]
ionic build ios
ionic run ios
[/bash]
At this point, you should see a blank app load up on the simulator.  

<a href="http://aptobits.com/wp-content/uploads/2015/10/ionic_blank_starter.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/ionic_blank_starter-169x300.png" alt="ionic_blank_starter" width="169" height="300" style="border: 1px solid #999;" class="aligncenter size-medium wp-image-403" /></a>

The simulator is great, but it takes a little longer than I'd really like when I'm making minor adjustments to the layout.  Luckily, there's a much faster way to get feedback.  Open up a new terminal and run this in the root of your project:
[bash]
ionic serve
[/bash]
This will spin up a local web server that serves your app.  It will even automatically refresh in your browser when you make changes to the source files.  This is the kind of tight feedback loop that makes web development fun.

I recommend opening your dev tools on the right side, this gives you a phone shaped viewport for your app and plenty of space for your dev tools.

<a href="http://aptobits.com/wp-content/uploads/2015/10/ionic_blank_starter_in_browser.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/ionic_blank_starter_in_browser-1024x618.png" alt="ionic_blank_starter_in_browser" width="740" height="447" class="aligncenter size-large wp-image-406" style="border: 1px solid #999;" /></a>


Open up www/index.html and change the H1 element's text from "Ionic Blank Starter" to "Calculator".  You should see the page immediately refresh in your browser and reflect the changes.  

<h1>Grids</h1>
Ionic ships with a grid system that uses flexbox to make it really easy to lay things out.  All of the devices supported by Ionic/Cordova support flexbox, so even though it's a relatively newer feature in desktop browsers we're free to use it in this environment.  

The basic gist of the grid system is that you can apply css classes to specify which elements are rows and which are columns.  By default, column elements will expand evenly to fill their row.  It's similar to bootstrap's grid system if you're used to that, except you aren't forced into a 12 column layout.

So, this markup:
[html]
&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col&quot;&gt;.col&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;.col&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;.col&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;.col&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;.col&lt;/div&gt;
&lt;/div&gt;
[/html]
Will look like this on a device:
<a href="http://aptobits.com/wp-content/uploads/2015/10/Grid_Evenly_Spaced_Columns.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/Grid_Evenly_Spaced_Columns.png" alt="Grid_Evenly_Spaced_Columns" style="width: 50%;"class="aligncenter size-full wp-image-394" /></a>

You can also use the grid system to do row and column spanning, explicit percentage sizing of columns, and a bunch of other things.  For what we're doing, just knowing the above is enough.  If your interested in learning the other things you can do, check out the <a href="http://ionicframework.com/docs/components/#grid-explicit">Ionic Documentation for Grids</a>.

<h2>Laying out the Calculator View</h2>
Thinking about our calculator, we need one row with a column that occupies 100% of the width for the calculator's display.  After that we need a grid composed of 4 rows, each containing 4 equal sized columns.

Play around with it and see if you can get it.  If you're stuck, take a peek at my solution below.
[showhide more_text="Show layout code" less_text="Hide layout code"]
[html]
&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col&quot;&gt;display text goes here&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
  &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
&lt;/div&gt;
[/html]
[/showhide]

Our layout looks pretty good, horizontally, but vertically we want to get our grid to fill the entire viewport and also disallow scrolling.

<a href="http://aptobits.com/wp-content/uploads/2015/10/basic_grid_layout.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/basic_grid_layout-169x300.png" alt="basic_grid_layout" width="169" height="300" style="border: 1px solid #999;" class="aligncenter size-medium wp-image-409"/></a>

Fixing the scrolling is simple, the ion-content directive has a scroll property that you can simply set to false.

Getting the vertical sizing is a little more difficult.  Ionic doesn't really support vertically sizing grids.  This makes sense, since 90% of the time you want your content to occupy as much vertical space as it needs and that's it.

Add these styles to www/css/style.css
[css]
.fill-height {
    display: flex;
    flex-direction: column;
}

.fill-height &gt; div.row {
    flex: 1;
}
[/css]

...and then apply the fill-height class to the ion-content element.
[html]
            &lt;ion-content scroll=&quot;false&quot; class=&quot;fill-height&quot;&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;5*3-8&lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;btn&lt;/div&gt;
                &lt;/div&gt;
            &lt;/ion-content&gt;
[/html]

...and voila!
<a href="http://aptobits.com/wp-content/uploads/2015/10/vertically_centered_grid.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/vertically_centered_grid-169x300.png" alt="vertically_centered_grid" width="169" height="300" class="aligncenter size-medium wp-image-411" style="border: 1px solid #999;"/></a>

<h1>Buttons</h1>
Lets put some buttons on our grid.  We can use a standard button element for now, and just apply a few <a href="http://ionicframework.com/docs/components/#outlined-buttons">Ionic button classes</a> to style it.

<strong>There's a ton of duplication in here</strong>, but for now it will do.  I also wrote a few styles to align things nicely.  At this point, our UI is pretty much done!

Here's the code I wound up with:

<strong>www/css/style.css</strong>
[css]
/* These two classes are used to make the button
 * grid stretch vertically to fill the available
 * space
 */
.fill-height {
    display: flex;
    flex-direction: column;
}
.fill-height &gt; div.row {
    flex: 1;
}


/* These two classes center the buttons in their
 * cells and right align the display text.
 * The second selector has a higher specificity,
 * so it overrides the centering.
 */
ion-content .col {
    text-align: center;
}
ion-content div.display {
    font-size: 2em;
    text-align: right;
}
[/css]

<strong>www/index.html</strong>
[html]
            &lt;ion-content scroll=&quot;false&quot; class=&quot;fill-height&quot;&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col display&quot;&gt;5*3-8&lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;!-- Look at all the duplication!  Css mixins or an
                             angular directive could help here. --&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                            7
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           8 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           9 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           * 
                        &lt;/button&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           4 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           5 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           6 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           / 
                        &lt;/button&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           1 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           2 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           3 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           + 
                        &lt;/button&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           CLR 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           0 
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                            =
                        &lt;/button&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;col&quot;&gt;
                        &lt;button class=&quot;button button-outline button-positive&quot;&gt;
                           - 
                        &lt;/button&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/ion-content&gt;

[/html]

And here's what it looks like:
<a href="http://aptobits.com/wp-content/uploads/2015/10/simulator_with_buttons.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/simulator_with_buttons-169x300.png" alt="simulator_with_buttons" width="169" height="300" class="aligncenter size-medium wp-image-416" style="border: 1px solid #999;" /></a>


In the next post, we'll wire up the behavior and get everything so it's actually working.

Other posts in this series:
<ul>
	<li><a href="http://aptobits.com/2015/10/getting-started-with-cordova/">Getting Started with Cordova</a></li>
        <li><a href="http://aptobits.com/2015/10/intro-to-ionic/">Intro to Ionic</a></li>
        <li>Build a Calculator with Ionic - Part 1 of 3</li>
        <li><a href="http://aptobits.com/2015/10/build-a-calculator-with-ionic-part-2/">Build a Calculator with Ionic - Part 2 of 3</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>392</wp:post_id>
		<wp:post_date><![CDATA[2015-10-10 16:23:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-10 20:23:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[build-a-calculator-with-ionic]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cordova"><![CDATA[Cordova]]></category>
		<category domain="post_tag" nicename="ionic"><![CDATA[Ionic]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="tutorials"><![CDATA[Tutorials]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Build a Calculator with Ionic - Part 2 of 3</title>
		<link>http://aptobits.com/2015/10/build-a-calculator-with-ionic-part-2/</link>
		<pubDate>Sun, 11 Oct 2015 20:16:50 +0000</pubDate>
		<dc:creator><![CDATA[kmckee]]></dc:creator>
		<guid isPermaLink="false">http://aptobits.com/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[In the <a href="http://aptobits.com/2015/10/build-a-calculator-with-ionic/">previous post</a>, we made a pretty calculator that doesn't really do anything.  In this post, we'll be focused on making the calculator actually work.  

<h1>Adding Behavior</h1>
Let's create a controller and get it associated with our view.  To start out with, let's get the clear button working.  We can expand from there, but that's probably the simplest place to start.

We'll need to create a controller to do this.  If you're not familiar with angular controllers, it won't stop you from completing this tutorial, but you'll definitely want to spend some time focusing on angular if you're planning to build more apps with Ionic after this.  

First, let's tell our view about our controller by adding the ng-controller attribute to the body element of our view.
<strong>www/index.html</strong>
[html]
    &lt;body ng-app=&quot;starter&quot; ng-controller=&quot;CalculatorController&quot;&gt;
       &lt;!-- ... --&gt;
    &lt;/body&gt;
[/html]

Next we'll wire the clear button's click event to a function that we're going to define in our controller:
<strong>www/index.html</strong>
[html]
&lt;button class=&quot;button button-outline button-positive&quot; 
     ng-click=&quot;clear()&quot;&gt;
    CLR 
&lt;/button&gt;
[/html]

Create a new file that will contain our CalculatorController:
<strong>+ www/js/controller.js</strong>
[js]
angular.module('starter')
.controller('CalculatorController', function($scope) {
   $scope.clear = function () {
       alert('Clear!');
   };
});
[/js]
A couple things worth noting: 
<ul>
	<li>The 'starter' string is the name of our root module, which is just the default module name that Ionic uses.  You can change this to something more meaningful, but if you do you'll need to change it in app.js as well.</li>
	<li>$scope is the scope that our view will be bound to.  At a basic level, this means that things we define on here will be visible when we're binding to stuff in the view.</li>
	<li>I'm just alerting in here for now, to make sure your controller is working and the view is able to bind to it.  Baby steps.</li>
</ul>


Finally, don't forget to include the controller script!
<strong>www/index.html</strong>
[html]
    &lt;head&gt;
        &lt;!-- ... --&gt;
        &lt;!-- your app's js --&gt;
        &lt;script src=&quot;js/app.js&quot;&gt;&lt;/script&gt;
        &lt;script src=&quot;js/controller.js&quot;&gt;&lt;/script&gt;
    &lt;/head&gt;
[/html]

With all that in place, you should be able to run your app and see the alert pop up when you click the button.  It's a start.

<h2>More Behavior</h2>
Thinking about the buttons on the calculator, they only really do 3 different things.
<ul>
	<li>The = button does the computation and displays the result.</li>
	<li>The CLR button clears the display</li>
	<li>Everything else just appends the button's label to the display</li>
</ul>

Let's make the 3 functions and wire them up to our buttons.  

<strong>www/js/controller.js</strong>
[js]
angular.module('starter')
.controller('CalculatorController', function($scope) {
   $scope.clear = function () {
       // TODO: Clear the display
       alert('Clear!');
   };

   $scope.clicked = function (label) {
       // TODO: Append the label to the display
       alert('clicked: ' + label);
   };

   $scope.equals = function () {
       // TODO: Calculate  &amp; set the display to the result.
       alert('Equals!');
   };
});
[/js]

<strong>www/index.html</strong>
[html]
  &lt;button class=&quot;button button-outline button-positive&quot;
          ng-click=&quot;clicked('7')&quot;&gt;
    7
  &lt;/button&gt;
&lt;!-- and so on... --&gt;
[/html]
One thing worth noting here, the clicked function requires that you pass an argument to it, and the clear and equals functions do not.  We should probably wrap these buttons up in a directive, but, not now.

<h2>Changing the Display</h2>
We need to create a variable on our controller's scope that will contain the equation that's currently being displayed, and we want to bind that text to the display div.

First, lets create the variable on our scope.  Inside your controller function, add this line to initialize the variable on the scope:
<strong>www/js/controller.js</strong>
[js]
angular.module('starter')
.controller('CalculatorController', function($scope) {
    // ...
    $scope.display = &quot;&quot;;
    // ...
});
[/js]

And, to bind this property to the content of our div we can use Angular's curly brace expression syntax:
<strong>www/index.html</strong>
[html]
&lt;!-- ... --&gt;
            &lt;ion-content scroll=&quot;false&quot; class=&quot;fill-height&quot;&gt;
                &lt;div class=&quot;row row-center&quot;&gt;
                    &lt;div class=&quot;col display&quot;&gt;
                        &lt;span&gt;{{display}}&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;!-- ... --&gt;
            &lt;/ion-content&gt;
&lt;!-- ... --&gt;
[/html]
Angular treats anything in double curly braces as an expression and will evaluate it against the scope that's tied to your view.

Next we can update the functions on our controller to make them update the display.  Angular will automatically keep this in sync with our view.

<strong>www/js/controller.js</strong>
[js]
angular.module('starter')
.controller('CalculatorController', function($scope) {
    // ...
    $scope.display = &quot;&quot;;
    // ...
});
[/js]

<h2>Current State</h2>
It's starting to actually look like a calculator!  It can even accurately calculate the result of an infinite number of equations (<small>as long as they equal 100</small>).

Check it out:
<a href="http://aptobits.com/wp-content/uploads/2015/10/its_doing_stuff.gif"><img src="http://aptobits.com/wp-content/uploads/2015/10/its_doing_stuff.gif" alt="its_doing_stuff" class="aligncenter" /></a>

This is another great place to throw down a git commit.

<h1>Using a Third Party Library to Calculate</h1>
JavaScript has a fantastic community built around it, with tons of libraries available to do just about anything you can think of.  Ionic uses a tool called Bower to manage it's JS dependencies.  If you're familiar with pip (Python), NuGet (.NET), or Bundler (ruby) it's pretty similar.

When the user hits the "=" key, we could totally parse the expression and calculate the result.  Heck, we could probably even just eval it.  I'd rather use this as an opportunity to show you how you would go about including and consuming third party packages in your application, because this will be way more useful to you in the future than the other options.

<a href="http://bower.io/search/?q=epsilonjs">Searching in Bower's repository</a>, I found a package called EpsilonJS that looks like it will do exactly what we're after.

Open up your terminal in the root of your project, and install epsilon:
[bash]
bower install epsilonjs
[/bash]

Next we need to include the epsilon script in our page:
<strong>www/index.html</strong>
[html]
        &lt;!-- cordova script (this will be a 404 during development) --&gt;
        &lt;script src=&quot;cordova.js&quot;&gt;&lt;/script&gt;

        &lt;!-- Third party libraries --&gt;
        &lt;script src=&quot;lib/epsilonjs/build/epsilon.min.js&quot;&gt;&lt;/script&gt;

        &lt;!-- your app's js --&gt;
        &lt;script src=&quot;js/app.js&quot;&gt;&lt;/script&gt;
        &lt;script src=&quot;js/controller.js&quot;&gt;&lt;/script&gt;
[/html]

Looking at the <a href="https://github.com/kdinev/EpsilonJS">documentation for EpsilonJS</a>, it looks like this will create a global Epsilon object.  Let's go ahead and use it directly from our controller for now. 

<strong>www/js/controller.js</strong>
[js]
angular.module('starter')
.controller('CalculatorController', function($scope) {
    // ...
    $scope.equals = function () {
        var equation = $scope.display;
        var parser = new Epsilon.ExpressionParser(equation);
        var result = parser.evaluate();
        $scope.display = result;
    };
});
[/js]

This code works, and it makes our calculator function pretty decently.  Play around with it and see for yourself.

<h2>Extracting a Calculator Service</h2>
This is not a good pattern to follow, however, for a few reasons.  
<ul>
	<li>Our controller contains the knowledge of how to create the things it depends on (the expression parser).  It's generally a bad idea to have a high level abstraction, such as a controller, have a downward pointing dependency on a lower level abstraction.</li>
	<li>Our controller is directly coupled to an external dependency.  This isn't a huge deal since our app is so simple, but in a larger application you would want to encapsulate this coupling some place.  If we had, say, two calculator controllers (Scientific vs simple maybe?), we wouldn't want both of their controllers to be coupled directly to this external API.  When that API changes, we would have to fix it in 2 or more places.</li>
	<li>We can't test our controller logic separately from the third party library.  This adds unneeded complexity to our controller tests.</li>
</ul>

We can address all of these concerns by wrapping epsilon in our own object and letting angular inject our new service into the controller.  We're now free to mock the controller in our tests if we choose, the controller doesn't know intimate details about the construction of it's dependencies, and we have a new object between our controller and the Epsilon library that will encapsulate our knowledge of how to use Epsilon.

This is, admittedly, a bit contrived for an app this simple.  However, you'll need to do this for larger applications.  So, let's do it for the practice.

Here's what I came up with:
<strong>www/js/controller.js</strong>
[js]
angular.module('starter')
.controller('CalculatorController', function($scope, calculator) {
    // ...
    $scope.equals = function () {
        var equation = $scope.display;
        var result = calculator.calculate(equation);
        $scope.display = result;
    };
})
.factory('calculator', function() {
    var calculate = function(equation) {
        var parser = new Epsilon.ExpressionParser(equation);
        return parser.evaluate();
    };

    return {
        calculate: calculate
    };
});

[/js]
I registered a factory function with angular that knows how to create a calculator object.  The calculator object encapsulates all knowledge of Epsilon, and would theoretically allow us to swap out our calculator library without having to change the rest of our app.  Notice on line 2 that the calculator is being passed into the controller by Angular.  Angular matches the factory name with the parameter name and injects the dependency for you.

<h1>Using Cordova Plugins</h1>
Cordova Plugins can be used to give you access to native functionality that you wouldn't normally be able to use from a web application.  They do this by injecting a javascript api into the dom that is able to talk to native code using the Cordova Bridge.  Most of that is transparent to you as a consumer of the plugin, really all that you need to know is that when you install a plugin it will create a javascript api that lets you do things you couldn't normally do from JavaScript.

So, let's make the device vibrate when the user hits equals.  More gold plating, but with a purpose! :)

A <a href="https://cordova.apache.org/plugins/?q=vibration">quick search on the Cordova Plugin Registry</a> shows one promising looking plugin:  
<a href="http://aptobits.com/wp-content/uploads/2015/10/plugin_search_vibrate.png"><img src="http://aptobits.com/wp-content/uploads/2015/10/plugin_search_vibrate.png" alt="plugin_search_vibrate" class="aligncenter" /></a>
I highlighted a couple things you'll want to keep an eye on when searching for plugins.  
<ul>
	<li>Does the plugin support all of the devices you're targeting?  This one supports quite a few.</li>
	<li>How many other people are using the plugin?  The more the merrier, you're less likely to find issues with it.</li>
	<li>How recently was the plugin updated?  Some older plugins may not be supported anymore, you'll want to think carefully before taking on a dependency on something like this.  What happens when new devices are released and they don't work with your plugin?</li>
</ul>

I also like to open the GitHub repository for any plugins I'm considering to see how healthy they look over there, and also check out their documentation and see if I'll be able to figure out how to use the it.

<h2>Adding the Plugin</h2>
Make sure you've done a git commit, then tell Ionic to add the plugin:
[bash]
ionic plugin add cordova-plugin-vibration
[/bash]

Next, let's invoke the vibrate function in our controller when we hit equals:
<strong>www/js/controller.js</strong>
[js]
    $scope.equals = function () {
        // ...
        navigator.vibrate(500);
    };

[/js]

Next up, you'll need to deploy to a device to test it out (the simulator and your web browser can't vibrate):
[bash]
ionic run ios --device
[/bash]

And that's it!

In the next post, we'll look at adding a local database that captures a log of all the equations we've entered.

Other posts in this series:
<ul>
	<li><a href="http://aptobits.com/2015/10/getting-started-with-cordova/">Getting Started with Cordova</a></li>
        <li><a href="http://aptobits.com/2015/10/intro-to-ionic/">Intro to Ionic</a></li>
        <li><a href="http://aptobits.com/2015/10/build-a-calculator-with-ionic/">Build a Calculator with Ionic - Part 1 of 3</a></li>
        <li>Build a Calculator with Ionic - Part 2 of 3</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date><![CDATA[2015-10-11 16:16:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 20:16:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[build-a-calculator-with-ionic-part-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cordova"><![CDATA[Cordova]]></category>
		<category domain="post_tag" nicename="ionic"><![CDATA[Ionic]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="tutorials"><![CDATA[Tutorials]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[build-a-calculator-with-ionic-part-2-of-2]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
